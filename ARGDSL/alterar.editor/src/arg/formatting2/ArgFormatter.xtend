/*
 * generated by Xtext 2.28.0
 */
package arg.formatting2

import Ardsl.Ontological
import arg.services.ArgGrammarAccess
import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class ArgFormatter extends AbstractFormatter2 {
	
	@Inject extension ArgGrammarAccess

	def dispatch void format(Ontological ontological, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (_class : ontological.classes) {
			_class.format
		}
		ontological.graphic.format
		ontological.physic.format
		ontological.game.format
	}

	def dispatch void format(Ardsl.Class _class, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (attribute : _class.attributes) {
			attribute.format
		}
		for (reference : _class.references) {
			reference.format
		}
	}
	
	// TODO: implement for Graphic, Physic, Game, GraphicClass, PhysicClass, Trigger, ObjInit, Rule, Not, Binary, Arithmetic
}
