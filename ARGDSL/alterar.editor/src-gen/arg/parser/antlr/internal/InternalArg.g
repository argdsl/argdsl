/*
 * generated by Xtext 2.28.0
 */
grammar InternalArg;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package arg.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package arg.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import arg.services.ArgGrammarAccess;

}

@parser::members {

 	private ArgGrammarAccess grammarAccess;

    public InternalArgParser(TokenStream input, ArgGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Ontological";
   	}

   	@Override
   	protected ArgGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleOntological
entryRuleOntological returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOntologicalRule()); }
	iv_ruleOntological=ruleOntological
	{ $current=$iv_ruleOntological.current; }
	EOF;

// Rule Ontological
ruleOntological returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Game'
		{
			newLeafNode(otherlv_0, grammarAccess.getOntologicalAccess().getGameKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOntologicalAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOntologicalRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"arg.Arg.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getOntologicalAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='elements'
		{
			newLeafNode(otherlv_3, grammarAccess.getOntologicalAccess().getElementsKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getOntologicalAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOntologicalAccess().getClassesClassParserRuleCall_5_0());
				}
				lv_classes_5_0=ruleClass
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOntologicalRule());
					}
					add(
						$current,
						"classes",
						lv_classes_5_0,
						"arg.Arg.Class");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOntologicalAccess().getClassesClassParserRuleCall_6_0());
				}
				lv_classes_6_0=ruleClass
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOntologicalRule());
					}
					add(
						$current,
						"classes",
						lv_classes_6_0,
						"arg.Arg.Class");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getOntologicalAccess().getRightCurlyBracketKeyword_7());
		}
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getOntologicalAccess().getRightCurlyBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOntologicalAccess().getGraphicGraphicParserRuleCall_9_0());
				}
				lv_graphic_9_0=ruleGraphic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOntologicalRule());
					}
					set(
						$current,
						"graphic",
						lv_graphic_9_0,
						"arg.Arg.Graphic");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOntologicalAccess().getPhysicPhysicParserRuleCall_10_0());
				}
				lv_physic_10_0=rulePhysic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOntologicalRule());
					}
					set(
						$current,
						"physic",
						lv_physic_10_0,
						"arg.Arg.Physic");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOntologicalAccess().getGameGameParserRuleCall_11_0());
				}
				lv_game_11_0=ruleGame
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOntologicalRule());
					}
					set(
						$current,
						"game",
						lv_game_11_0,
						"arg.Arg.Game");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConditionAccess().getNotParserRuleCall_0());
		}
		this_Not_0=ruleNot
		{
			$current = $this_Not_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConditionAccess().getBinaryParserRuleCall_1());
		}
		this_Binary_1=ruleBinary
		{
			$current = $this_Binary_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConditionAccess().getArithmeticParserRuleCall_2());
		}
		this_Arithmetic_2=ruleArithmetic
		{
			$current = $this_Arithmetic_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	iv_ruleValue=ruleValue
	{ $current=$iv_ruleValue.current; }
	EOF;

// Rule Value
ruleValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getValueAccess().getAttributeValueParserRuleCall_0());
		}
		this_AttributeValue_0=ruleAttributeValue
		{
			$current = $this_AttributeValue_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getConstantValueParserRuleCall_1());
		}
		this_ConstantValue_1=ruleConstantValue
		{
			$current = $this_ConstantValue_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getAllInstancesParserRuleCall_2());
		}
		this_AllInstances_2=ruleAllInstances
		{
			$current = $this_AllInstances_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleClass
entryRuleClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassRule()); }
	iv_ruleClass=ruleClass
	{ $current=$iv_ruleClass.current; }
	EOF;

// Rule Class
ruleClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getClassAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"arg.Arg.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getClassAccess().getAttributesAttributeParserRuleCall_2_0_0());
					}
					lv_attributes_2_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_2_0,
							"arg.Arg.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getClassAccess().getAttributesAttributeParserRuleCall_2_1_0());
					}
					lv_attributes_3_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_3_0,
							"arg.Arg.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			otherlv_4='dependences'
			{
				newLeafNode(otherlv_4, grammarAccess.getClassAccess().getDependencesKeyword_3_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getClassAccess().getReferencesReferenceParserRuleCall_3_2_0());
					}
					lv_references_6_0=ruleReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassRule());
						}
						add(
							$current,
							"references",
							lv_references_6_0,
							"arg.Arg.Reference");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getClassAccess().getReferencesReferenceParserRuleCall_3_3_0());
					}
					lv_references_7_0=ruleReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassRule());
						}
						add(
							$current,
							"references",
							lv_references_7_0,
							"arg.Arg.Reference");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getClassAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getClassAccess().getRightCurlyBracketKeyword_4());
		}
		(
			(
				lv_abstract_10_0='abstract'
				{
					newLeafNode(lv_abstract_10_0, grammarAccess.getClassAccess().getAbstractAbstractKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassRule());
					}
					setWithLastConsumed($current, "abstract", lv_abstract_10_0 != null, "abstract");
				}
			)
		)?
		(
			(
				lv_noSCN_11_0='invisible'
				{
					newLeafNode(lv_noSCN_11_0, grammarAccess.getClassAccess().getNoSCNInvisibleKeyword_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassRule());
					}
					setWithLastConsumed($current, "noSCN", lv_noSCN_11_0 != null, "invisible");
				}
			)
		)?
	)
;

// Entry rule entryRuleGraphic
entryRuleGraphic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGraphicRule()); }
	iv_ruleGraphic=ruleGraphic
	{ $current=$iv_ruleGraphic.current; }
	EOF;

// Rule Graphic
ruleGraphic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Graphic'
		{
			newLeafNode(otherlv_0, grammarAccess.getGraphicAccess().getGraphicKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getGraphicAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGraphicAccess().getClassesGraphicClassParserRuleCall_2_0());
				}
				lv_classes_2_0=ruleGraphicClass
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGraphicRule());
					}
					add(
						$current,
						"classes",
						lv_classes_2_0,
						"arg.Arg.GraphicClass");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGraphicAccess().getClassesGraphicClassParserRuleCall_3_0());
				}
				lv_classes_3_0=ruleGraphicClass
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGraphicRule());
					}
					add(
						$current,
						"classes",
						lv_classes_3_0,
						"arg.Arg.GraphicClass");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getGraphicAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRulePhysic
entryRulePhysic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPhysicRule()); }
	iv_rulePhysic=rulePhysic
	{ $current=$iv_rulePhysic.current; }
	EOF;

// Rule Physic
rulePhysic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Physics'
		{
			newLeafNode(otherlv_0, grammarAccess.getPhysicAccess().getPhysicsKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getPhysicAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPhysicAccess().getClassesPhysicClassParserRuleCall_2_0());
				}
				lv_classes_2_0=rulePhysicClass
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhysicRule());
					}
					add(
						$current,
						"classes",
						lv_classes_2_0,
						"arg.Arg.PhysicClass");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPhysicAccess().getClassesPhysicClassParserRuleCall_3_0());
				}
				lv_classes_3_0=rulePhysicClass
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhysicRule());
					}
					add(
						$current,
						"classes",
						lv_classes_3_0,
						"arg.Arg.PhysicClass");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getPhysicAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleGame
entryRuleGame returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGameRule()); }
	iv_ruleGame=ruleGame
	{ $current=$iv_ruleGame.current; }
	EOF;

// Rule Game
ruleGame returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Gamelogic'
		{
			newLeafNode(otherlv_0, grammarAccess.getGameAccess().getGamelogicKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getGameAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='Display'
		{
			newLeafNode(otherlv_2, grammarAccess.getGameAccess().getDisplayKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getGameAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='start'
		{
			newLeafNode(otherlv_4, grammarAccess.getGameAccess().getStartKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGameAccess().getStartEStringParserRuleCall_5_0());
				}
				lv_start_5_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGameRule());
					}
					set(
						$current,
						"start",
						lv_start_5_0,
						"arg.Arg.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='win'
		{
			newLeafNode(otherlv_6, grammarAccess.getGameAccess().getWinKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGameAccess().getWinEStringParserRuleCall_7_0());
				}
				lv_win_7_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGameRule());
					}
					set(
						$current,
						"win",
						lv_win_7_0,
						"arg.Arg.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='lose'
		{
			newLeafNode(otherlv_8, grammarAccess.getGameAccess().getLoseKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGameAccess().getLoseEStringParserRuleCall_9_0());
				}
				lv_lose_9_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGameRule());
					}
					set(
						$current,
						"lose",
						lv_lose_9_0,
						"arg.Arg.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='score'
		{
			newLeafNode(otherlv_10, grammarAccess.getGameAccess().getScoreKeyword_10());
		}
		otherlv_11='{'
		{
			newLeafNode(otherlv_11, grammarAccess.getGameAccess().getLeftCurlyBracketKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGameAccess().getScoreScoreSystemParserRuleCall_12_0());
				}
				lv_score_12_0=ruleScoreSystem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGameRule());
					}
					set(
						$current,
						"score",
						lv_score_12_0,
						"arg.Arg.ScoreSystem");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getGameAccess().getRightCurlyBracketKeyword_13());
		}
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getGameAccess().getRightCurlyBracketKeyword_14());
		}
		(
			otherlv_15='Actions'
			{
				newLeafNode(otherlv_15, grammarAccess.getGameAccess().getActionsKeyword_15_0());
			}
			otherlv_16='{'
			{
				newLeafNode(otherlv_16, grammarAccess.getGameAccess().getLeftCurlyBracketKeyword_15_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGameAccess().getActionsTriggersTriggerParserRuleCall_15_2_0());
					}
					lv_actionsTriggers_17_0=ruleTrigger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGameRule());
						}
						add(
							$current,
							"actionsTriggers",
							lv_actionsTriggers_17_0,
							"arg.Arg.Trigger");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getGameAccess().getActionsTriggersTriggerParserRuleCall_15_3_0());
					}
					lv_actionsTriggers_18_0=ruleTrigger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGameRule());
						}
						add(
							$current,
							"actionsTriggers",
							lv_actionsTriggers_18_0,
							"arg.Arg.Trigger");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_19='}'
			{
				newLeafNode(otherlv_19, grammarAccess.getGameAccess().getRightCurlyBracketKeyword_15_4());
			}
		)?
		(
			otherlv_20='Collisions'
			{
				newLeafNode(otherlv_20, grammarAccess.getGameAccess().getCollisionsKeyword_16_0());
			}
			otherlv_21='{'
			{
				newLeafNode(otherlv_21, grammarAccess.getGameAccess().getLeftCurlyBracketKeyword_16_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGameAccess().getCollisionsCollisionParserRuleCall_16_2_0());
					}
					lv_collisions_22_0=ruleCollision
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGameRule());
						}
						add(
							$current,
							"collisions",
							lv_collisions_22_0,
							"arg.Arg.Collision");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getGameAccess().getCollisionsCollisionParserRuleCall_16_3_0());
					}
					lv_collisions_23_0=ruleCollision
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGameRule());
						}
						add(
							$current,
							"collisions",
							lv_collisions_23_0,
							"arg.Arg.Collision");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_24='}'
			{
				newLeafNode(otherlv_24, grammarAccess.getGameAccess().getRightCurlyBracketKeyword_16_4());
			}
		)?
		(
			otherlv_25='Buttons'
			{
				newLeafNode(otherlv_25, grammarAccess.getGameAccess().getButtonsKeyword_17_0());
			}
			otherlv_26='{'
			{
				newLeafNode(otherlv_26, grammarAccess.getGameAccess().getLeftCurlyBracketKeyword_17_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGameAccess().getGamepadGamePadParserRuleCall_17_2_0());
					}
					lv_gamepad_27_0=ruleGamePad
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGameRule());
						}
						add(
							$current,
							"gamepad",
							lv_gamepad_27_0,
							"arg.Arg.GamePad");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getGameAccess().getGamepadGamePadParserRuleCall_17_3_0());
					}
					lv_gamepad_28_0=ruleGamePad
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGameRule());
						}
						add(
							$current,
							"gamepad",
							lv_gamepad_28_0,
							"arg.Arg.GamePad");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_29='}'
			{
				newLeafNode(otherlv_29, grammarAccess.getGameAccess().getRightCurlyBracketKeyword_17_4());
			}
		)?
		(
			otherlv_30='Elements'
			{
				newLeafNode(otherlv_30, grammarAccess.getGameAccess().getElementsKeyword_18_0());
			}
			otherlv_31='{'
			{
				newLeafNode(otherlv_31, grammarAccess.getGameAccess().getLeftCurlyBracketKeyword_18_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGameAccess().getObjInitObjInitParserRuleCall_18_2_0());
					}
					lv_objInit_32_0=ruleObjInit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGameRule());
						}
						add(
							$current,
							"objInit",
							lv_objInit_32_0,
							"arg.Arg.ObjInit");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getGameAccess().getObjInitObjInitParserRuleCall_18_3_0());
					}
					lv_objInit_33_0=ruleObjInit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGameRule());
						}
						add(
							$current,
							"objInit",
							lv_objInit_33_0,
							"arg.Arg.ObjInit");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_34='}'
			{
				newLeafNode(otherlv_34, grammarAccess.getGameAccess().getRightCurlyBracketKeyword_18_4());
			}
		)?
		otherlv_35='}'
		{
			newLeafNode(otherlv_35, grammarAccess.getGameAccess().getRightCurlyBracketKeyword_19());
		}
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"arg.Arg.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAttributeAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getTypeEStringParserRuleCall_2_0());
				}
				lv_type_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"arg.Arg.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='['
		{
			newLeafNode(otherlv_3, grammarAccess.getAttributeAccess().getLeftSquareBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getMinEIntParserRuleCall_4_0());
				}
				lv_min_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"min",
						lv_min_4_0,
						"arg.Arg.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='..'
		{
			newLeafNode(otherlv_5, grammarAccess.getAttributeAccess().getFullStopFullStopKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getMaxAttributeMaxParserRuleCall_6_0());
				}
				lv_max_6_0=ruleAttributeMax
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"max",
						lv_max_6_0,
						"arg.Arg.AttributeMax");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=']'
		{
			newLeafNode(otherlv_7, grammarAccess.getAttributeAccess().getRightSquareBracketKeyword_7());
		}
		otherlv_8='='
		{
			newLeafNode(otherlv_8, grammarAccess.getAttributeAccess().getEqualsSignKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getDefaultConstantParserRuleCall_9_0());
				}
				lv_default_9_0=ruleConstant
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"default",
						lv_default_9_0,
						"arg.Arg.Constant");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_isParam_10_0='isParam'
				{
					newLeafNode(lv_isParam_10_0, grammarAccess.getAttributeAccess().getIsParamIsParamKeyword_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed($current, "isParam", lv_isParam_10_0 != null, "isParam");
				}
			)
		)?
		(
			(
				lv_isKey_11_0='isKey'
				{
					newLeafNode(lv_isKey_11_0, grammarAccess.getAttributeAccess().getIsKeyIsKeyKeyword_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed($current, "isKey", lv_isKey_11_0 != null, "isKey");
				}
			)
		)?
		(
			(
				lv_readOnly_12_0='readOnly'
				{
					newLeafNode(lv_readOnly_12_0, grammarAccess.getAttributeAccess().getReadOnlyReadOnlyKeyword_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed($current, "readOnly", lv_readOnly_12_0 != null, "readOnly");
				}
			)
		)?
	)
;

// Entry rule entryRuleAttributeMax
entryRuleAttributeMax returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAttributeMaxRule()); }
	iv_ruleAttributeMax=ruleAttributeMax
	{ $current=$iv_ruleAttributeMax.current.getText(); }
	EOF;

// Rule AttributeMax
ruleAttributeMax returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAttributeMaxAccess().getAsteriskKeyword_0());
		}
		    |
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getAttributeMaxAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleReference
entryRuleReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceRule()); }
	iv_ruleReference=ruleReference
	{ $current=$iv_ruleReference.current; }
	EOF;

// Rule Reference
ruleReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"arg.Arg.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='containtment'
			{
				newLeafNode(otherlv_1, grammarAccess.getReferenceAccess().getContaintmentKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReferenceAccess().getContaintmentEStringParserRuleCall_1_1_0());
					}
					lv_containtment_2_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReferenceRule());
						}
						set(
							$current,
							"containtment",
							lv_containtment_2_0,
							"arg.Arg.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_3='min'
		{
			newLeafNode(otherlv_3, grammarAccess.getReferenceAccess().getMinKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceAccess().getMinEIntParserRuleCall_3_0());
				}
				lv_min_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceRule());
					}
					set(
						$current,
						"min",
						lv_min_4_0,
						"arg.Arg.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='max'
		{
			newLeafNode(otherlv_5, grammarAccess.getReferenceAccess().getMaxKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceAccess().getMaxEIntParserRuleCall_5_0());
				}
				lv_max_6_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceRule());
					}
					set(
						$current,
						"max",
						lv_max_6_0,
						"arg.Arg.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='target'
		{
			newLeafNode(otherlv_7, grammarAccess.getReferenceAccess().getTargetKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceAccess().getTargetEStringParserRuleCall_7_0());
				}
				lv_target_8_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceRule());
					}
					set(
						$current,
						"target",
						lv_target_8_0,
						"arg.Arg.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9='opposite'
			{
				newLeafNode(otherlv_9, grammarAccess.getReferenceAccess().getOppositeKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReferenceAccess().getOppositeEStringParserRuleCall_8_1_0());
					}
					lv_opposite_10_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReferenceRule());
						}
						set(
							$current,
							"opposite",
							lv_opposite_10_0,
							"arg.Arg.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleGraphicClass
entryRuleGraphicClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGraphicClassRule()); }
	iv_ruleGraphicClass=ruleGraphicClass
	{ $current=$iv_ruleGraphicClass.current; }
	EOF;

// Rule GraphicClass
ruleGraphicClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='element'
		{
			newLeafNode(otherlv_0, grammarAccess.getGraphicClassAccess().getElementKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGraphicClassRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getGraphicClassAccess().getOntoClassClassCrossReference_1_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='versions'
		{
			newLeafNode(otherlv_2, grammarAccess.getGraphicClassAccess().getVersionsKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getGraphicClassAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGraphicClassAccess().getVersionsVersionsParserRuleCall_4_0());
				}
				lv_versions_4_0=ruleVersions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGraphicClassRule());
					}
					add(
						$current,
						"versions",
						lv_versions_4_0,
						"arg.Arg.Versions");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGraphicClassAccess().getVersionsVersionsParserRuleCall_5_0());
				}
				lv_versions_5_0=ruleVersions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGraphicClassRule());
					}
					add(
						$current,
						"versions",
						lv_versions_5_0,
						"arg.Arg.Versions");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getGraphicClassAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_7='constraints'
		{
			newLeafNode(otherlv_7, grammarAccess.getGraphicClassAccess().getConstraintsKeyword_7());
		}
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getGraphicClassAccess().getLeftCurlyBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGraphicClassAccess().getConstraintsConstraintsParserRuleCall_9_0());
				}
				lv_constraints_9_0=ruleConstraints
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGraphicClassRule());
					}
					set(
						$current,
						"constraints",
						lv_constraints_9_0,
						"arg.Arg.Constraints");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getGraphicClassAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleConstraints
entryRuleConstraints returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintsRule()); }
	iv_ruleConstraints=ruleConstraints
	{ $current=$iv_ruleConstraints.current; }
	EOF;

// Rule Constraints
ruleConstraints returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='plane'
		{
			newLeafNode(otherlv_0, grammarAccess.getConstraintsAccess().getPlaneKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstraintsAccess().getPlanesPlanesEnumRuleCall_1_0());
				}
				lv_planes_1_0=rulePlanes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstraintsRule());
					}
					set(
						$current,
						"planes",
						lv_planes_1_0,
						"arg.Arg.Planes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_overlapping_2_0='overlaps'
				{
					newLeafNode(lv_overlapping_2_0, grammarAccess.getConstraintsAccess().getOverlappingOverlapsKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstraintsRule());
					}
					setWithLastConsumed($current, "overlapping", lv_overlapping_2_0 != null, "overlaps");
				}
			)
		)
		otherlv_3='sizeMin'
		{
			newLeafNode(otherlv_3, grammarAccess.getConstraintsAccess().getSizeMinKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstraintsAccess().getSizeMinEDoubleParserRuleCall_4_0());
				}
				lv_sizeMin_4_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstraintsRule());
					}
					set(
						$current,
						"sizeMin",
						lv_sizeMin_4_0,
						"arg.Arg.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='sizeMax'
		{
			newLeafNode(otherlv_5, grammarAccess.getConstraintsAccess().getSizeMaxKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstraintsAccess().getSizeMaxEDoubleParserRuleCall_6_0());
				}
				lv_sizeMax_6_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstraintsRule());
					}
					set(
						$current,
						"sizeMax",
						lv_sizeMax_6_0,
						"arg.Arg.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='xVariation'
		{
			newLeafNode(otherlv_7, grammarAccess.getConstraintsAccess().getXVariationKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstraintsAccess().getXToOriginPosEDoubleParserRuleCall_8_0());
				}
				lv_xToOriginPos_8_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstraintsRule());
					}
					set(
						$current,
						"xToOriginPos",
						lv_xToOriginPos_8_0,
						"arg.Arg.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='yVariation'
		{
			newLeafNode(otherlv_9, grammarAccess.getConstraintsAccess().getYVariationKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstraintsAccess().getYToOriginPosEDoubleParserRuleCall_10_0());
				}
				lv_yToOriginPos_10_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstraintsRule());
					}
					set(
						$current,
						"yToOriginPos",
						lv_yToOriginPos_10_0,
						"arg.Arg.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11='zVariation'
		{
			newLeafNode(otherlv_11, grammarAccess.getConstraintsAccess().getZVariationKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstraintsAccess().getZToOriginPosEDoubleParserRuleCall_12_0());
				}
				lv_zToOriginPos_12_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstraintsRule());
					}
					set(
						$current,
						"zToOriginPos",
						lv_zToOriginPos_12_0,
						"arg.Arg.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_13='rotation'
		{
			newLeafNode(otherlv_13, grammarAccess.getConstraintsAccess().getRotationKeyword_13());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstraintsAccess().getRotationEIntParserRuleCall_14_0());
				}
				lv_rotation_14_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstraintsRule());
					}
					set(
						$current,
						"rotation",
						lv_rotation_14_0,
						"arg.Arg.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVersions
entryRuleVersions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVersionsRule()); }
	iv_ruleVersions=ruleVersions
	{ $current=$iv_ruleVersions.current; }
	EOF;

// Rule Versions
ruleVersions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVersionsAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVersionsRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"arg.Arg.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getVersionsAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVersionsAccess().getURLEStringParserRuleCall_2_0());
				}
				lv_URL_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVersionsRule());
					}
					set(
						$current,
						"URL",
						lv_URL_2_0,
						"arg.Arg.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEDouble
entryRuleEDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEDoubleRule()); }
	iv_ruleEDouble=ruleEDouble
	{ $current=$iv_ruleEDouble.current.getText(); }
	EOF;

// Rule EDouble
ruleEDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0());
			}
		)?
		(
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1());
			}
		)?
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEDoubleAccess().getFullStopKeyword_2());
		}
		this_INT_3=RULE_INT
		{
			$current.merge(this_INT_3);
		}
		{
			newLeafNode(this_INT_3, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3());
		}
		(
			(
				kw='E'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_0());
				}
				    |
				kw='e'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_1());
				}
			)
			(
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1());
				}
			)?
			this_INT_7=RULE_INT
			{
				$current.merge(this_INT_7);
			}
			{
				newLeafNode(this_INT_7, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2());
			}
		)?
	)
;

// Entry rule entryRulePhysicClass
entryRulePhysicClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPhysicClassRule()); }
	iv_rulePhysicClass=rulePhysicClass
	{ $current=$iv_rulePhysicClass.current; }
	EOF;

// Rule PhysicClass
rulePhysicClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='element'
		{
			newLeafNode(otherlv_0, grammarAccess.getPhysicClassAccess().getElementKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPhysicClassRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getPhysicClassAccess().getOntoClassClassCrossReference_1_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='body'
		{
			newLeafNode(otherlv_2, grammarAccess.getPhysicClassAccess().getBodyKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getPhysicClassAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPhysicClassAccess().getPhysicBodyPhysicBodyParserRuleCall_4_0());
				}
				lv_physicBody_4_0=rulePhysicBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhysicClassRule());
					}
					set(
						$current,
						"physicBody",
						lv_physicBody_4_0,
						"arg.Arg.PhysicBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getPhysicClassAccess().getRightCurlyBracketKeyword_5());
		}
		(
			otherlv_6='forces'
			{
				newLeafNode(otherlv_6, grammarAccess.getPhysicClassAccess().getForcesKeyword_6_0());
			}
			otherlv_7='{'
			{
				newLeafNode(otherlv_7, grammarAccess.getPhysicClassAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPhysicClassAccess().getForcesForceParserRuleCall_6_2_0());
					}
					lv_forces_8_0=ruleForce
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPhysicClassRule());
						}
						add(
							$current,
							"forces",
							lv_forces_8_0,
							"arg.Arg.Force");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPhysicClassAccess().getForcesForceParserRuleCall_6_3_0());
					}
					lv_forces_9_0=ruleForce
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPhysicClassRule());
						}
						add(
							$current,
							"forces",
							lv_forces_9_0,
							"arg.Arg.Force");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getPhysicClassAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		(
			otherlv_11='contacts'
			{
				newLeafNode(otherlv_11, grammarAccess.getPhysicClassAccess().getContactsKeyword_7_0());
			}
			otherlv_12='{'
			{
				newLeafNode(otherlv_12, grammarAccess.getPhysicClassAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPhysicClassAccess().getBitMasksBitMasksParserRuleCall_7_2_0());
					}
					lv_bitMasks_13_0=ruleBitMasks
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPhysicClassRule());
						}
						set(
							$current,
							"bitMasks",
							lv_bitMasks_13_0,
							"arg.Arg.BitMasks");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getPhysicClassAccess().getRightCurlyBracketKeyword_7_3());
			}
		)?
	)
;

// Entry rule entryRulePhysicBody
entryRulePhysicBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPhysicBodyRule()); }
	iv_rulePhysicBody=rulePhysicBody
	{ $current=$iv_rulePhysicBody.current; }
	EOF;

// Rule PhysicBody
rulePhysicBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='mass'
		{
			newLeafNode(otherlv_0, grammarAccess.getPhysicBodyAccess().getMassKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPhysicBodyAccess().getMassEDoubleParserRuleCall_1_0());
				}
				lv_mass_1_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhysicBodyRule());
					}
					set(
						$current,
						"mass",
						lv_mass_1_0,
						"arg.Arg.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='bodyType'
		{
			newLeafNode(otherlv_2, grammarAccess.getPhysicBodyAccess().getBodyTypeKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPhysicBodyAccess().getBodyTypeBodyTypeEnumRuleCall_3_0());
				}
				lv_bodyType_3_0=ruleBodyType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhysicBodyRule());
					}
					set(
						$current,
						"bodyType",
						lv_bodyType_3_0,
						"arg.Arg.BodyType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='charge'
		{
			newLeafNode(otherlv_4, grammarAccess.getPhysicBodyAccess().getChargeKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPhysicBodyAccess().getChargeEDoubleParserRuleCall_5_0());
				}
				lv_charge_5_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhysicBodyRule());
					}
					set(
						$current,
						"charge",
						lv_charge_5_0,
						"arg.Arg.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='friction'
		{
			newLeafNode(otherlv_6, grammarAccess.getPhysicBodyAccess().getFrictionKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPhysicBodyAccess().getFrictionEDoubleParserRuleCall_7_0());
				}
				lv_friction_7_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhysicBodyRule());
					}
					set(
						$current,
						"friction",
						lv_friction_7_0,
						"arg.Arg.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='rollingFriction'
		{
			newLeafNode(otherlv_8, grammarAccess.getPhysicBodyAccess().getRollingFrictionKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPhysicBodyAccess().getRollingFrictionEDoubleParserRuleCall_9_0());
				}
				lv_rollingFriction_9_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhysicBodyRule());
					}
					set(
						$current,
						"rollingFriction",
						lv_rollingFriction_9_0,
						"arg.Arg.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='restitution'
		{
			newLeafNode(otherlv_10, grammarAccess.getPhysicBodyAccess().getRestitutionKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPhysicBodyAccess().getRestitutionEDoubleParserRuleCall_11_0());
				}
				lv_restitution_11_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhysicBodyRule());
					}
					set(
						$current,
						"restitution",
						lv_restitution_11_0,
						"arg.Arg.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_12='damping'
		{
			newLeafNode(otherlv_12, grammarAccess.getPhysicBodyAccess().getDampingKeyword_12());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPhysicBodyAccess().getDampingEDoubleParserRuleCall_13_0());
				}
				lv_damping_13_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhysicBodyRule());
					}
					set(
						$current,
						"damping",
						lv_damping_13_0,
						"arg.Arg.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_14='angularDamping'
		{
			newLeafNode(otherlv_14, grammarAccess.getPhysicBodyAccess().getAngularDampingKeyword_14());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPhysicBodyAccess().getAngularDampingEDoubleParserRuleCall_15_0());
				}
				lv_angularDamping_15_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhysicBodyRule());
					}
					set(
						$current,
						"angularDamping",
						lv_angularDamping_15_0,
						"arg.Arg.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBitMasks
entryRuleBitMasks returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBitMasksRule()); }
	iv_ruleBitMasks=ruleBitMasks
	{ $current=$iv_ruleBitMasks.current; }
	EOF;

// Rule BitMasks
ruleBitMasks returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='collision'
		{
			newLeafNode(otherlv_0, grammarAccess.getBitMasksAccess().getCollisionKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBitMasksRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getBitMasksAccess().getCollisionClassCrossReference_1_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBitMasksRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getBitMasksAccess().getCollisionClassCrossReference_2_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='contact'
		{
			newLeafNode(otherlv_3, grammarAccess.getBitMasksAccess().getContactKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBitMasksRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getBitMasksAccess().getContactClassCrossReference_4_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBitMasksRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getBitMasksAccess().getContactClassCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleForce
entryRuleForce returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForceRule()); }
	iv_ruleForce=ruleForce
	{ $current=$iv_ruleForce.current; }
	EOF;

// Rule Force
ruleForce returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getForceAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForceRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"arg.Arg.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getForceAccess().getColonKeyword_1());
		}
		otherlv_2='gesture'
		{
			newLeafNode(otherlv_2, grammarAccess.getForceAccess().getGestureKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForceAccess().getGestureGestureEnumRuleCall_3_0());
				}
				lv_gesture_3_0=ruleGesture
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForceRule());
					}
					set(
						$current,
						"gesture",
						lv_gesture_3_0,
						"arg.Arg.Gesture");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='['
			{
				newLeafNode(otherlv_4, grammarAccess.getForceAccess().getLeftSquareBracketKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getForceAccess().getXVectorEDoubleParserRuleCall_4_1_0());
					}
					lv_xVector_5_0=ruleEDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForceRule());
						}
						set(
							$current,
							"xVector",
							lv_xVector_5_0,
							"arg.Arg.EDouble");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getForceAccess().getCommaKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getForceAccess().getYVectorEDoubleParserRuleCall_4_3_0());
					}
					lv_yVector_7_0=ruleEDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForceRule());
						}
						set(
							$current,
							"yVector",
							lv_yVector_7_0,
							"arg.Arg.EDouble");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getForceAccess().getCommaKeyword_4_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getForceAccess().getZVectorEDoubleParserRuleCall_4_5_0());
					}
					lv_zVector_9_0=ruleEDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForceRule());
						}
						set(
							$current,
							"zVector",
							lv_zVector_9_0,
							"arg.Arg.EDouble");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_10=']'
			{
				newLeafNode(otherlv_10, grammarAccess.getForceAccess().getRightSquareBracketKeyword_4_6());
			}
		)?
	)
;

// Entry rule entryRuleGamePad
entryRuleGamePad returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGamePadRule()); }
	iv_ruleGamePad=ruleGamePad
	{ $current=$iv_ruleGamePad.current; }
	EOF;

// Rule GamePad
ruleGamePad returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getGamePadAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGamePadRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"arg.Arg.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='->'
		{
			newLeafNode(otherlv_1, grammarAccess.getGamePadAccess().getHyphenMinusGreaterThanSignKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGamePadRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getGamePadAccess().getTriggerTriggerCrossReference_2_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleScoreSystem
entryRuleScoreSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScoreSystemRule()); }
	iv_ruleScoreSystem=ruleScoreSystem
	{ $current=$iv_ruleScoreSystem.current; }
	EOF;

// Rule ScoreSystem
ruleScoreSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='start'
		{
			newLeafNode(otherlv_0, grammarAccess.getScoreSystemAccess().getStartKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScoreSystemAccess().getStartEIntParserRuleCall_1_0());
				}
				lv_start_1_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScoreSystemRule());
					}
					set(
						$current,
						"start",
						lv_start_1_0,
						"arg.Arg.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='finish'
		{
			newLeafNode(otherlv_2, grammarAccess.getScoreSystemAccess().getFinishKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScoreSystemAccess().getFinishNoLimitParserRuleCall_3_0());
				}
				lv_finish_3_0=ruleNoLimit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScoreSystemRule());
					}
					set(
						$current,
						"finish",
						lv_finish_3_0,
						"arg.Arg.NoLimit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='lives'
		{
			newLeafNode(otherlv_4, grammarAccess.getScoreSystemAccess().getLivesKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScoreSystemAccess().getLivesEIntParserRuleCall_5_0());
				}
				lv_lives_5_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScoreSystemRule());
					}
					set(
						$current,
						"lives",
						lv_lives_5_0,
						"arg.Arg.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNoLimit
entryRuleNoLimit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNoLimitRule()); }
	iv_ruleNoLimit=ruleNoLimit
	{ $current=$iv_ruleNoLimit.current.getText(); }
	EOF;

// Rule NoLimit
ruleNoLimit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNoLimitAccess().getAsteriskKeyword_0());
		}
		    |
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getNoLimitAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleTrigger
entryRuleTrigger returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTriggerRule()); }
	iv_ruleTrigger=ruleTrigger
	{ $current=$iv_ruleTrigger.current; }
	EOF;

// Rule Trigger
ruleTrigger returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTriggerAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTriggerRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"arg.Arg.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getTriggerAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='action'
			{
				newLeafNode(otherlv_2, grammarAccess.getTriggerAccess().getActionKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTriggerAccess().getActionBasicActionsEnumRuleCall_2_1_0());
					}
					lv_action_3_0=ruleBasicActions
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTriggerRule());
						}
						set(
							$current,
							"action",
							lv_action_3_0,
							"arg.Arg.BasicActions");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='message'
			{
				newLeafNode(otherlv_4, grammarAccess.getTriggerAccess().getMessageKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTriggerAccess().getMessageEStringParserRuleCall_3_1_0());
					}
					lv_message_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTriggerRule());
						}
						set(
							$current,
							"message",
							lv_message_5_0,
							"arg.Arg.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='score'
			{
				newLeafNode(otherlv_6, grammarAccess.getTriggerAccess().getScoreKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTriggerAccess().getScoreChangeEIntParserRuleCall_4_1_0());
					}
					lv_scoreChange_7_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTriggerRule());
						}
						set(
							$current,
							"scoreChange",
							lv_scoreChange_7_0,
							"arg.Arg.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='timeEach'
			{
				newLeafNode(otherlv_8, grammarAccess.getTriggerAccess().getTimeEachKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTriggerAccess().getTimeTriggerEIntParserRuleCall_5_1_0());
					}
					lv_timeTrigger_9_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTriggerRule());
						}
						set(
							$current,
							"timeTrigger",
							lv_timeTrigger_9_0,
							"arg.Arg.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10='changes'
			{
				newLeafNode(otherlv_10, grammarAccess.getTriggerAccess().getChangesKeyword_6_0());
			}
			otherlv_11='{'
			{
				newLeafNode(otherlv_11, grammarAccess.getTriggerAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTriggerAccess().getPhysicChangesPhysicChangeParserRuleCall_6_2_0());
					}
					lv_physicChanges_12_0=rulePhysicChange
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTriggerRule());
						}
						add(
							$current,
							"physicChanges",
							lv_physicChanges_12_0,
							"arg.Arg.PhysicChange");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTriggerAccess().getPhysicChangesPhysicChangeParserRuleCall_6_3_0());
					}
					lv_physicChanges_13_0=rulePhysicChange
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTriggerRule());
						}
						add(
							$current,
							"physicChanges",
							lv_physicChanges_13_0,
							"arg.Arg.PhysicChange");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getTriggerAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getTriggerAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleCollision
entryRuleCollision returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollisionRule()); }
	iv_ruleCollision=ruleCollision
	{ $current=$iv_ruleCollision.current; }
	EOF;

// Rule Collision
ruleCollision returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='element'
		{
			newLeafNode(otherlv_0, grammarAccess.getCollisionAccess().getElementKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCollisionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getCollisionAccess().getClassAClassCrossReference_1_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='to'
		{
			newLeafNode(otherlv_2, grammarAccess.getCollisionAccess().getToKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCollisionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getCollisionAccess().getClassBClassCrossReference_3_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='->'
		{
			newLeafNode(otherlv_4, grammarAccess.getCollisionAccess().getHyphenMinusGreaterThanSignKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCollisionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getCollisionAccess().getActionTriggerCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleObjInit
entryRuleObjInit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjInitRule()); }
	iv_ruleObjInit=ruleObjInit
	{ $current=$iv_ruleObjInit.current; }
	EOF;

// Rule ObjInit
ruleObjInit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getObjInitAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjInitRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"arg.Arg.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getObjInitAccess().getColonKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObjInitRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getObjInitAccess().getClassClassCrossReference_2_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='['
		{
			newLeafNode(otherlv_3, grammarAccess.getObjInitAccess().getLeftSquareBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObjInitAccess().getPosXPosOrCameraParserRuleCall_4_0());
				}
				lv_posX_4_0=rulePosOrCamera
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjInitRule());
					}
					set(
						$current,
						"posX",
						lv_posX_4_0,
						"arg.Arg.PosOrCamera");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getObjInitAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObjInitAccess().getPosYPosOrCameraParserRuleCall_6_0());
				}
				lv_posY_6_0=rulePosOrCamera
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjInitRule());
					}
					set(
						$current,
						"posY",
						lv_posY_6_0,
						"arg.Arg.PosOrCamera");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getObjInitAccess().getCommaKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObjInitAccess().getPosZPosOrCameraParserRuleCall_8_0());
				}
				lv_posZ_8_0=rulePosOrCamera
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjInitRule());
					}
					set(
						$current,
						"posZ",
						lv_posZ_8_0,
						"arg.Arg.PosOrCamera");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9=','
			{
				newLeafNode(otherlv_9, grammarAccess.getObjInitAccess().getCommaKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getObjInitAccess().getRotationEIntParserRuleCall_9_1_0());
					}
					lv_rotation_10_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getObjInitRule());
						}
						set(
							$current,
							"rotation",
							lv_rotation_10_0,
							"arg.Arg.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_11=']'
		{
			newLeafNode(otherlv_11, grammarAccess.getObjInitAccess().getRightSquareBracketKeyword_10());
		}
		(
			otherlv_12='attributes'
			{
				newLeafNode(otherlv_12, grammarAccess.getObjInitAccess().getAttributesKeyword_11_0());
			}
			otherlv_13='{'
			{
				newLeafNode(otherlv_13, grammarAccess.getObjInitAccess().getLeftCurlyBracketKeyword_11_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getObjInitAccess().getAttributeObjAttributeParserRuleCall_11_2_0());
					}
					lv_attribute_14_0=ruleObjAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getObjInitRule());
						}
						add(
							$current,
							"attribute",
							lv_attribute_14_0,
							"arg.Arg.ObjAttribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_15=','
				{
					newLeafNode(otherlv_15, grammarAccess.getObjInitAccess().getCommaKeyword_11_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getObjInitAccess().getAttributeObjAttributeParserRuleCall_11_3_1_0());
						}
						lv_attribute_16_0=ruleObjAttribute
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getObjInitRule());
							}
							add(
								$current,
								"attribute",
								lv_attribute_16_0,
								"arg.Arg.ObjAttribute");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_17='}'
			{
				newLeafNode(otherlv_17, grammarAccess.getObjInitAccess().getRightCurlyBracketKeyword_11_4());
			}
		)?
		(
			otherlv_18='rules'
			{
				newLeafNode(otherlv_18, grammarAccess.getObjInitAccess().getRulesKeyword_12_0());
			}
			otherlv_19='{'
			{
				newLeafNode(otherlv_19, grammarAccess.getObjInitAccess().getLeftCurlyBracketKeyword_12_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getObjInitAccess().getRulesRuleParserRuleCall_12_2_0());
					}
					lv_rules_20_0=ruleRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getObjInitRule());
						}
						add(
							$current,
							"rules",
							lv_rules_20_0,
							"arg.Arg.Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_21=','
				{
					newLeafNode(otherlv_21, grammarAccess.getObjInitAccess().getCommaKeyword_12_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getObjInitAccess().getRulesRuleParserRuleCall_12_3_1_0());
						}
						lv_rules_22_0=ruleRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getObjInitRule());
							}
							add(
								$current,
								"rules",
								lv_rules_22_0,
								"arg.Arg.Rule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_23='}'
			{
				newLeafNode(otherlv_23, grammarAccess.getObjInitAccess().getRightCurlyBracketKeyword_12_4());
			}
		)?
	)
;

// Entry rule entryRulePosOrCamera
entryRulePosOrCamera returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPosOrCameraRule()); }
	iv_rulePosOrCamera=rulePosOrCamera
	{ $current=$iv_rulePosOrCamera.current.getText(); }
	EOF;

// Rule PosOrCamera
rulePosOrCamera returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='camera'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPosOrCameraAccess().getCameraKeyword_0());
		}
		    |
		{
			newCompositeNode(grammarAccess.getPosOrCameraAccess().getEDoubleParserRuleCall_1());
		}
		this_EDouble_1=ruleEDouble
		{
			$current.merge(this_EDouble_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePhysicChange
entryRulePhysicChange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPhysicChangeRule()); }
	iv_rulePhysicChange=rulePhysicChange
	{ $current=$iv_rulePhysicChange.current; }
	EOF;

// Rule PhysicChange
rulePhysicChange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='do'
		{
			newLeafNode(otherlv_0, grammarAccess.getPhysicChangeAccess().getDoKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPhysicChangeAccess().getActionActionEnumRuleCall_1_0());
				}
				lv_action_1_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhysicChangeRule());
					}
					set(
						$current,
						"action",
						lv_action_1_0,
						"arg.Arg.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				otherlv_2='in'
				{
					newLeafNode(otherlv_2, grammarAccess.getPhysicChangeAccess().getInKeyword_2_0());
				}
			)?
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPhysicChangeRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getPhysicChangeAccess().getClassClassCrossReference_2_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='named'
			{
				newLeafNode(otherlv_4, grammarAccess.getPhysicChangeAccess().getNamedKeyword_3());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getPhysicChangeAccess().getObjectEStringParserRuleCall_4_0());
				}
				lv_object_5_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhysicChangeRule());
					}
					set(
						$current,
						"object",
						lv_object_5_0,
						"arg.Arg.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6='at'
			{
				newLeafNode(otherlv_6, grammarAccess.getPhysicChangeAccess().getAtKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPhysicChangeAccess().getPositionPositionEnumRuleCall_5_1_0());
					}
					lv_position_7_0=rulePosition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPhysicChangeRule());
						}
						set(
							$current,
							"position",
							lv_position_7_0,
							"arg.Arg.Position");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='scale'
			{
				newLeafNode(otherlv_8, grammarAccess.getPhysicChangeAccess().getScaleKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPhysicChangeAccess().getScaleEDoubleParserRuleCall_6_1_0());
					}
					lv_scale_9_0=ruleEDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPhysicChangeRule());
						}
						set(
							$current,
							"scale",
							lv_scale_9_0,
							"arg.Arg.EDouble");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10='stat'
			{
				newLeafNode(otherlv_10, grammarAccess.getPhysicChangeAccess().getStatKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPhysicChangeAccess().getAttributeEStringParserRuleCall_7_1_0());
					}
					lv_attribute_11_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPhysicChangeRule());
						}
						set(
							$current,
							"attribute",
							lv_attribute_11_0,
							"arg.Arg.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_12='changeStat'
			{
				newLeafNode(otherlv_12, grammarAccess.getPhysicChangeAccess().getChangeStatKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPhysicChangeAccess().getChangeValueEIntParserRuleCall_8_1_0());
					}
					lv_changeValue_13_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPhysicChangeRule());
						}
						set(
							$current,
							"changeValue",
							lv_changeValue_13_0,
							"arg.Arg.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_14='force'
			{
				newLeafNode(otherlv_14, grammarAccess.getPhysicChangeAccess().getForceKeyword_9_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPhysicChangeRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getPhysicChangeAccess().getForceForceCrossReference_9_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleObjAttribute
entryRuleObjAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjAttributeRule()); }
	iv_ruleObjAttribute=ruleObjAttribute
	{ $current=$iv_ruleObjAttribute.current; }
	EOF;

// Rule ObjAttribute
ruleObjAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObjAttributeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getObjAttributeAccess().getAttributeAttributeCrossReference_0_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='value'
		{
			newLeafNode(otherlv_1, grammarAccess.getObjAttributeAccess().getValueKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObjAttributeAccess().getValueEStringParserRuleCall_2_0());
				}
				lv_value_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjAttributeRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"arg.Arg.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	iv_ruleRule=ruleRule
	{ $current=$iv_ruleRule.current; }
	EOF;

// Rule Rule
ruleRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='do'
		{
			newLeafNode(otherlv_0, grammarAccess.getRuleAccess().getDoKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRuleRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getRuleAccess().getActionTriggerCrossReference_1_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='if('
		{
			newLeafNode(otherlv_2, grammarAccess.getRuleAccess().getIfKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getConditionConditionParserRuleCall_3_0());
				}
				lv_condition_3_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					set(
						$current,
						"condition",
						lv_condition_3_0,
						"arg.Arg.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getRuleAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleNot
entryRuleNot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotRule()); }
	iv_ruleNot=ruleNot
	{ $current=$iv_ruleNot.current; }
	EOF;

// Rule Not
ruleNot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='!'
		{
			newLeafNode(otherlv_0, grammarAccess.getNotAccess().getExclamationMarkKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNotAccess().getLeftConditionParserRuleCall_1_0());
				}
				lv_left_1_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNotRule());
					}
					set(
						$current,
						"left",
						lv_left_1_0,
						"arg.Arg.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBinary
entryRuleBinary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBinaryRule()); }
	iv_ruleBinary=ruleBinary
	{ $current=$iv_ruleBinary.current; }
	EOF;

// Rule Binary
ruleBinary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getBinaryAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBinaryAccess().getLeftConditionParserRuleCall_1_0());
				}
				lv_left_1_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBinaryRule());
					}
					set(
						$current,
						"left",
						lv_left_1_0,
						"arg.Arg.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getBinaryAccess().getRightParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBinaryAccess().getOpLogicOpsEnumRuleCall_3_0());
				}
				lv_op_3_0=ruleLogicOps
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBinaryRule());
					}
					set(
						$current,
						"op",
						lv_op_3_0,
						"arg.Arg.LogicOps");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getBinaryAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBinaryAccess().getRightConditionParserRuleCall_5_0());
				}
				lv_right_5_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBinaryRule());
					}
					set(
						$current,
						"right",
						lv_right_5_0,
						"arg.Arg.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getBinaryAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleArithmetic
entryRuleArithmetic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticRule()); }
	iv_ruleArithmetic=ruleArithmetic
	{ $current=$iv_ruleArithmetic.current; }
	EOF;

// Rule Arithmetic
ruleArithmetic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getArithmeticAccess().getLeftValueParserRuleCall_0_0());
				}
				lv_left_0_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArithmeticRule());
					}
					set(
						$current,
						"left",
						lv_left_0_0,
						"arg.Arg.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getArithmeticAccess().getOpArithmOpsEnumRuleCall_1_0());
				}
				lv_op_1_0=ruleArithmOps
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArithmeticRule());
					}
					set(
						$current,
						"op",
						lv_op_1_0,
						"arg.Arg.ArithmOps");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getArithmeticAccess().getRightValueParserRuleCall_2_0());
				}
				lv_right_2_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArithmeticRule());
					}
					set(
						$current,
						"right",
						lv_right_2_0,
						"arg.Arg.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAttributeValue
entryRuleAttributeValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeValueRule()); }
	iv_ruleAttributeValue=ruleAttributeValue
	{ $current=$iv_ruleAttributeValue.current; }
	EOF;

// Rule AttributeValue
ruleAttributeValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeValueAccess().getClassEStringParserRuleCall_0_0());
				}
				lv_class_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeValueRule());
					}
					set(
						$current,
						"class",
						lv_class_0_0,
						"arg.Arg.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getAttributeValueAccess().getFullStopKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeValueAccess().getAttributeEStringParserRuleCall_2_0());
				}
				lv_attribute_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeValueRule());
					}
					set(
						$current,
						"attribute",
						lv_attribute_2_0,
						"arg.Arg.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConstantValue
entryRuleConstantValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstantValueRule()); }
	iv_ruleConstantValue=ruleConstantValue
	{ $current=$iv_ruleConstantValue.current; }
	EOF;

// Rule ConstantValue
ruleConstantValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getConstantValueAccess().getValueConstantParserRuleCall_0());
			}
			lv_value_0_0=ruleConstant
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getConstantValueRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"arg.Arg.Constant");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleConstant
entryRuleConstant returns [String current=null]:
	{ newCompositeNode(grammarAccess.getConstantRule()); }
	iv_ruleConstant=ruleConstant
	{ $current=$iv_ruleConstant.current.getText(); }
	EOF;

// Rule Constant
ruleConstant returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConstantAccess().getEIntParserRuleCall_0());
		}
		this_EInt_0=ruleEInt
		{
			$current.merge(this_EInt_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConstantAccess().getEStringParserRuleCall_1());
		}
		this_EString_1=ruleEString
		{
			$current.merge(this_EString_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAllInstances
entryRuleAllInstances returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAllInstancesRule()); }
	iv_ruleAllInstances=ruleAllInstances
	{ $current=$iv_ruleAllInstances.current; }
	EOF;

// Rule AllInstances
ruleAllInstances returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Number'
		{
			newLeafNode(otherlv_0, grammarAccess.getAllInstancesAccess().getNumberKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAllInstancesAccess().getTypeEStringParserRuleCall_1_0());
				}
				lv_type_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAllInstancesRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"arg.Arg.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Rule Gesture
ruleGesture returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='drag'
			{
				$current = grammarAccess.getGestureAccess().getDragEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getGestureAccess().getDragEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='tilt'
			{
				$current = grammarAccess.getGestureAccess().getTiltEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getGestureAccess().getTiltEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='touch'
			{
				$current = grammarAccess.getGestureAccess().getTouchEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getGestureAccess().getTouchEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule Planes
rulePlanes returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='any'
			{
				$current = grammarAccess.getPlanesAccess().getAnyEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPlanesAccess().getAnyEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='horizontal'
			{
				$current = grammarAccess.getPlanesAccess().getHorizontalEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPlanesAccess().getHorizontalEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='vertical'
			{
				$current = grammarAccess.getPlanesAccess().getVerticalEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getPlanesAccess().getVerticalEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule BodyType
ruleBodyType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='static'
			{
				$current = grammarAccess.getBodyTypeAccess().getStaticEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBodyTypeAccess().getStaticEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='dynamic'
			{
				$current = grammarAccess.getBodyTypeAccess().getDynamicEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBodyTypeAccess().getDynamicEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='kinematic'
			{
				$current = grammarAccess.getBodyTypeAccess().getKinematicEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getBodyTypeAccess().getKinematicEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule BasicActions
ruleBasicActions returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='start'
			{
				$current = grammarAccess.getBasicActionsAccess().getStartEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBasicActionsAccess().getStartEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='win'
			{
				$current = grammarAccess.getBasicActionsAccess().getWinEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBasicActionsAccess().getWinEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='lose'
			{
				$current = grammarAccess.getBasicActionsAccess().getLoseEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getBasicActionsAccess().getLoseEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='none'
			{
				$current = grammarAccess.getBasicActionsAccess().getNoneEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getBasicActionsAccess().getNoneEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='restart'
			{
				$current = grammarAccess.getBasicActionsAccess().getRestartEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getBasicActionsAccess().getRestartEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule Action
ruleAction returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='create'
			{
				$current = grammarAccess.getActionAccess().getCreateEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getActionAccess().getCreateEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='edit'
			{
				$current = grammarAccess.getActionAccess().getEditEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getActionAccess().getEditEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='delete'
			{
				$current = grammarAccess.getActionAccess().getDeleteEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getActionAccess().getDeleteEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule Position
rulePosition returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='front'
			{
				$current = grammarAccess.getPositionAccess().getFrontEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPositionAccess().getFrontEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='default'
			{
				$current = grammarAccess.getPositionAccess().getDefaultEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPositionAccess().getDefaultEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='back'
			{
				$current = grammarAccess.getPositionAccess().getBackEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getPositionAccess().getBackEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule LogicOps
ruleLogicOps returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='&'
			{
				$current = grammarAccess.getLogicOpsAccess().getAndEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getLogicOpsAccess().getAndEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='|'
			{
				$current = grammarAccess.getLogicOpsAccess().getOrEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getLogicOpsAccess().getOrEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule ArithmOps
ruleArithmOps returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='='
			{
				$current = grammarAccess.getArithmOpsAccess().getEqualEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getArithmOpsAccess().getEqualEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='>'
			{
				$current = grammarAccess.getArithmOpsAccess().getGreaterEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getArithmOpsAccess().getGreaterEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='>='
			{
				$current = grammarAccess.getArithmOpsAccess().getGreaterEqualEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getArithmOpsAccess().getGreaterEqualEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='<'
			{
				$current = grammarAccess.getArithmOpsAccess().getLowerEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getArithmOpsAccess().getLowerEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='<='
			{
				$current = grammarAccess.getArithmOpsAccess().getLowerEqualEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getArithmOpsAccess().getLowerEqualEnumLiteralDeclaration_4());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
