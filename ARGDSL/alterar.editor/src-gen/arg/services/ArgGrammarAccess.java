/*
 * generated by Xtext 2.28.0
 */
package arg.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class ArgGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class OntologicalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Ontological");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cElementsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cClassesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cClassesClassParserRuleCall_5_0 = (RuleCall)cClassesAssignment_5.eContents().get(0);
		private final Assignment cClassesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cClassesClassParserRuleCall_6_0 = (RuleCall)cClassesAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cGraphicAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cGraphicGraphicParserRuleCall_9_0 = (RuleCall)cGraphicAssignment_9.eContents().get(0);
		private final Assignment cPhysicAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cPhysicPhysicParserRuleCall_10_0 = (RuleCall)cPhysicAssignment_10.eContents().get(0);
		private final Assignment cGameAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cGameGameParserRuleCall_11_0 = (RuleCall)cGameAssignment_11.eContents().get(0);
		
		//Ontological returns Ontological:
		//    'Game'
		//    name=EString
		//    '{'
		//        'elements' '{' classes+=Class ( classes+=Class)* '}'
		//    '}'
		//    graphic=Graphic
		//    physic=Physic
		//    game=Game;
		@Override public ParserRule getRule() { return rule; }
		
		//'Game'
		//name=EString
		//'{'
		//    'elements' '{' classes+=Class ( classes+=Class)* '}'
		//'}'
		//graphic=Graphic
		//physic=Physic
		//game=Game
		public Group getGroup() { return cGroup; }
		
		//'Game'
		public Keyword getGameKeyword_0() { return cGameKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'elements'
		public Keyword getElementsKeyword_3() { return cElementsKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//classes+=Class
		public Assignment getClassesAssignment_5() { return cClassesAssignment_5; }
		
		//Class
		public RuleCall getClassesClassParserRuleCall_5_0() { return cClassesClassParserRuleCall_5_0; }
		
		//( classes+=Class)*
		public Assignment getClassesAssignment_6() { return cClassesAssignment_6; }
		
		//Class
		public RuleCall getClassesClassParserRuleCall_6_0() { return cClassesClassParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//graphic=Graphic
		public Assignment getGraphicAssignment_9() { return cGraphicAssignment_9; }
		
		//Graphic
		public RuleCall getGraphicGraphicParserRuleCall_9_0() { return cGraphicGraphicParserRuleCall_9_0; }
		
		//physic=Physic
		public Assignment getPhysicAssignment_10() { return cPhysicAssignment_10; }
		
		//Physic
		public RuleCall getPhysicPhysicParserRuleCall_10_0() { return cPhysicPhysicParserRuleCall_10_0; }
		
		//game=Game
		public Assignment getGameAssignment_11() { return cGameAssignment_11; }
		
		//Game
		public RuleCall getGameGameParserRuleCall_11_0() { return cGameGameParserRuleCall_11_0; }
	}
	public class ConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Condition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNotParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBinaryParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cArithmeticParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Condition returns Condition:
		//    Not | Binary | Arithmetic;
		@Override public ParserRule getRule() { return rule; }
		
		//Not | Binary | Arithmetic
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Not
		public RuleCall getNotParserRuleCall_0() { return cNotParserRuleCall_0; }
		
		//Binary
		public RuleCall getBinaryParserRuleCall_1() { return cBinaryParserRuleCall_1; }
		
		//Arithmetic
		public RuleCall getArithmeticParserRuleCall_2() { return cArithmeticParserRuleCall_2; }
	}
	public class ValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Value");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAttributeValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cConstantValueParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAllInstancesParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Value returns Value:
		//    AttributeValue | ConstantValue | AllInstances;
		@Override public ParserRule getRule() { return rule; }
		
		//AttributeValue | ConstantValue | AllInstances
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AttributeValue
		public RuleCall getAttributeValueParserRuleCall_0() { return cAttributeValueParserRuleCall_0; }
		
		//ConstantValue
		public RuleCall getConstantValueParserRuleCall_1() { return cConstantValueParserRuleCall_1; }
		
		//AllInstances
		public RuleCall getAllInstancesParserRuleCall_2() { return cAllInstancesParserRuleCall_2; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class ClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Class");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cAttributesAttributeParserRuleCall_2_0_0 = (RuleCall)cAttributesAssignment_2_0.eContents().get(0);
		private final Assignment cAttributesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cAttributesAttributeParserRuleCall_2_1_0 = (RuleCall)cAttributesAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDependencesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cReferencesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cReferencesReferenceParserRuleCall_3_2_0 = (RuleCall)cReferencesAssignment_3_2.eContents().get(0);
		private final Assignment cReferencesAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cReferencesReferenceParserRuleCall_3_3_0 = (RuleCall)cReferencesAssignment_3_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAbstractAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Keyword cAbstractAbstractKeyword_5_0 = (Keyword)cAbstractAssignment_5.eContents().get(0);
		private final Assignment cNoSCNAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final Keyword cNoSCNInvisibleKeyword_6_0 = (Keyword)cNoSCNAssignment_6.eContents().get(0);
		
		//Class returns Class:
		//    name=EString
		//    '{'
		//        (attributes+=Attribute ( attributes+=Attribute)*)?
		//        ('dependences' '{' references+=Reference ( references+=Reference)* '}' )?
		//    '}'
		//    (abstract?='abstract')?
		//    (noSCN?='invisible')?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString
		//'{'
		//    (attributes+=Attribute ( attributes+=Attribute)*)?
		//    ('dependences' '{' references+=Reference ( references+=Reference)* '}' )?
		//'}'
		//(abstract?='abstract')?
		//(noSCN?='invisible')?
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(attributes+=Attribute ( attributes+=Attribute)*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//attributes+=Attribute
		public Assignment getAttributesAssignment_2_0() { return cAttributesAssignment_2_0; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_2_0_0() { return cAttributesAttributeParserRuleCall_2_0_0; }
		
		//( attributes+=Attribute)*
		public Assignment getAttributesAssignment_2_1() { return cAttributesAssignment_2_1; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_2_1_0() { return cAttributesAttributeParserRuleCall_2_1_0; }
		
		//('dependences' '{' references+=Reference ( references+=Reference)* '}' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'dependences'
		public Keyword getDependencesKeyword_3_0() { return cDependencesKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//references+=Reference
		public Assignment getReferencesAssignment_3_2() { return cReferencesAssignment_3_2; }
		
		//Reference
		public RuleCall getReferencesReferenceParserRuleCall_3_2_0() { return cReferencesReferenceParserRuleCall_3_2_0; }
		
		//( references+=Reference)*
		public Assignment getReferencesAssignment_3_3() { return cReferencesAssignment_3_3; }
		
		//Reference
		public RuleCall getReferencesReferenceParserRuleCall_3_3_0() { return cReferencesReferenceParserRuleCall_3_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
		
		//(abstract?='abstract')?
		public Assignment getAbstractAssignment_5() { return cAbstractAssignment_5; }
		
		//'abstract'
		public Keyword getAbstractAbstractKeyword_5_0() { return cAbstractAbstractKeyword_5_0; }
		
		//(noSCN?='invisible')?
		public Assignment getNoSCNAssignment_6() { return cNoSCNAssignment_6; }
		
		//'invisible'
		public Keyword getNoSCNInvisibleKeyword_6_0() { return cNoSCNInvisibleKeyword_6_0; }
	}
	public class GraphicElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Graphic");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGraphicKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cClassesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cClassesGraphicClassParserRuleCall_2_0 = (RuleCall)cClassesAssignment_2.eContents().get(0);
		private final Assignment cClassesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cClassesGraphicClassParserRuleCall_3_0 = (RuleCall)cClassesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Graphic returns Graphic:
		//    'Graphic''{'
		//    classes+=GraphicClass ( classes+=GraphicClass)*
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Graphic''{'
		//classes+=GraphicClass ( classes+=GraphicClass)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Graphic'
		public Keyword getGraphicKeyword_0() { return cGraphicKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//classes+=GraphicClass
		public Assignment getClassesAssignment_2() { return cClassesAssignment_2; }
		
		//GraphicClass
		public RuleCall getClassesGraphicClassParserRuleCall_2_0() { return cClassesGraphicClassParserRuleCall_2_0; }
		
		//( classes+=GraphicClass)*
		public Assignment getClassesAssignment_3() { return cClassesAssignment_3; }
		
		//GraphicClass
		public RuleCall getClassesGraphicClassParserRuleCall_3_0() { return cClassesGraphicClassParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class PhysicElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Physic");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPhysicsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cClassesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cClassesPhysicClassParserRuleCall_2_0 = (RuleCall)cClassesAssignment_2.eContents().get(0);
		private final Assignment cClassesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cClassesPhysicClassParserRuleCall_3_0 = (RuleCall)cClassesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Physic returns Physic:
		//    'Physics''{'
		//    classes+=PhysicClass ( classes+=PhysicClass)*
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Physics''{'
		//classes+=PhysicClass ( classes+=PhysicClass)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Physics'
		public Keyword getPhysicsKeyword_0() { return cPhysicsKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//classes+=PhysicClass
		public Assignment getClassesAssignment_2() { return cClassesAssignment_2; }
		
		//PhysicClass
		public RuleCall getClassesPhysicClassParserRuleCall_2_0() { return cClassesPhysicClassParserRuleCall_2_0; }
		
		//( classes+=PhysicClass)*
		public Assignment getClassesAssignment_3() { return cClassesAssignment_3; }
		
		//PhysicClass
		public RuleCall getClassesPhysicClassParserRuleCall_3_0() { return cClassesPhysicClassParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class GameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Game");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGamelogicKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cDisplayKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cStartKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cStartAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cStartEStringParserRuleCall_5_0 = (RuleCall)cStartAssignment_5.eContents().get(0);
		private final Keyword cWinKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cWinAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cWinEStringParserRuleCall_7_0 = (RuleCall)cWinAssignment_7.eContents().get(0);
		private final Keyword cLoseKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cLoseAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cLoseEStringParserRuleCall_9_0 = (RuleCall)cLoseAssignment_9.eContents().get(0);
		private final Keyword cScoreKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cLeftCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cScoreAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cScoreScoreSystemParserRuleCall_12_0 = (RuleCall)cScoreAssignment_12.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cActionsKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_15_1 = (Keyword)cGroup_15.eContents().get(1);
		private final Assignment cActionsTriggersAssignment_15_2 = (Assignment)cGroup_15.eContents().get(2);
		private final RuleCall cActionsTriggersTriggerParserRuleCall_15_2_0 = (RuleCall)cActionsTriggersAssignment_15_2.eContents().get(0);
		private final Assignment cActionsTriggersAssignment_15_3 = (Assignment)cGroup_15.eContents().get(3);
		private final RuleCall cActionsTriggersTriggerParserRuleCall_15_3_0 = (RuleCall)cActionsTriggersAssignment_15_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15_4 = (Keyword)cGroup_15.eContents().get(4);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cCollisionsKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_16_1 = (Keyword)cGroup_16.eContents().get(1);
		private final Assignment cCollisionsAssignment_16_2 = (Assignment)cGroup_16.eContents().get(2);
		private final RuleCall cCollisionsCollisionParserRuleCall_16_2_0 = (RuleCall)cCollisionsAssignment_16_2.eContents().get(0);
		private final Assignment cCollisionsAssignment_16_3 = (Assignment)cGroup_16.eContents().get(3);
		private final RuleCall cCollisionsCollisionParserRuleCall_16_3_0 = (RuleCall)cCollisionsAssignment_16_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_16_4 = (Keyword)cGroup_16.eContents().get(4);
		private final Group cGroup_17 = (Group)cGroup.eContents().get(17);
		private final Keyword cButtonsKeyword_17_0 = (Keyword)cGroup_17.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_17_1 = (Keyword)cGroup_17.eContents().get(1);
		private final Assignment cGamepadAssignment_17_2 = (Assignment)cGroup_17.eContents().get(2);
		private final RuleCall cGamepadGamePadParserRuleCall_17_2_0 = (RuleCall)cGamepadAssignment_17_2.eContents().get(0);
		private final Assignment cGamepadAssignment_17_3 = (Assignment)cGroup_17.eContents().get(3);
		private final RuleCall cGamepadGamePadParserRuleCall_17_3_0 = (RuleCall)cGamepadAssignment_17_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_17_4 = (Keyword)cGroup_17.eContents().get(4);
		private final Group cGroup_18 = (Group)cGroup.eContents().get(18);
		private final Keyword cElementsKeyword_18_0 = (Keyword)cGroup_18.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_18_1 = (Keyword)cGroup_18.eContents().get(1);
		private final Assignment cObjInitAssignment_18_2 = (Assignment)cGroup_18.eContents().get(2);
		private final RuleCall cObjInitObjInitParserRuleCall_18_2_0 = (RuleCall)cObjInitAssignment_18_2.eContents().get(0);
		private final Assignment cObjInitAssignment_18_3 = (Assignment)cGroup_18.eContents().get(3);
		private final RuleCall cObjInitObjInitParserRuleCall_18_3_0 = (RuleCall)cObjInitAssignment_18_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_18_4 = (Keyword)cGroup_18.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		
		//Game returns Game:
		//    'Gamelogic''{'
		//    'Display''{'
		//    'start' start=EString
		//    'win' win=EString
		//    'lose' lose=EString
		//    'score' '{' score=ScoreSystem '}'
		//    '}'
		//    ('Actions' '{' actionsTriggers+=Trigger ( actionsTriggers+=Trigger)* '}')?
		//    ('Collisions' '{' collisions+=Collision ( collisions+=Collision)* '}')?
		//    ('Buttons' '{' gamepad+=GamePad ( gamepad+=GamePad)* '}')?
		//    ('Elements' '{' objInit+=ObjInit ( objInit+=ObjInit)* '}')?
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Gamelogic''{'
		//'Display''{'
		//'start' start=EString
		//'win' win=EString
		//'lose' lose=EString
		//'score' '{' score=ScoreSystem '}'
		//'}'
		//('Actions' '{' actionsTriggers+=Trigger ( actionsTriggers+=Trigger)* '}')?
		//('Collisions' '{' collisions+=Collision ( collisions+=Collision)* '}')?
		//('Buttons' '{' gamepad+=GamePad ( gamepad+=GamePad)* '}')?
		//('Elements' '{' objInit+=ObjInit ( objInit+=ObjInit)* '}')?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Gamelogic'
		public Keyword getGamelogicKeyword_0() { return cGamelogicKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'Display'
		public Keyword getDisplayKeyword_2() { return cDisplayKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//'start'
		public Keyword getStartKeyword_4() { return cStartKeyword_4; }
		
		//start=EString
		public Assignment getStartAssignment_5() { return cStartAssignment_5; }
		
		//EString
		public RuleCall getStartEStringParserRuleCall_5_0() { return cStartEStringParserRuleCall_5_0; }
		
		//'win'
		public Keyword getWinKeyword_6() { return cWinKeyword_6; }
		
		//win=EString
		public Assignment getWinAssignment_7() { return cWinAssignment_7; }
		
		//EString
		public RuleCall getWinEStringParserRuleCall_7_0() { return cWinEStringParserRuleCall_7_0; }
		
		//'lose'
		public Keyword getLoseKeyword_8() { return cLoseKeyword_8; }
		
		//lose=EString
		public Assignment getLoseAssignment_9() { return cLoseAssignment_9; }
		
		//EString
		public RuleCall getLoseEStringParserRuleCall_9_0() { return cLoseEStringParserRuleCall_9_0; }
		
		//'score'
		public Keyword getScoreKeyword_10() { return cScoreKeyword_10; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11() { return cLeftCurlyBracketKeyword_11; }
		
		//score=ScoreSystem
		public Assignment getScoreAssignment_12() { return cScoreAssignment_12; }
		
		//ScoreSystem
		public RuleCall getScoreScoreSystemParserRuleCall_12_0() { return cScoreScoreSystemParserRuleCall_12_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
		
		//('Actions' '{' actionsTriggers+=Trigger ( actionsTriggers+=Trigger)* '}')?
		public Group getGroup_15() { return cGroup_15; }
		
		//'Actions'
		public Keyword getActionsKeyword_15_0() { return cActionsKeyword_15_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_15_1() { return cLeftCurlyBracketKeyword_15_1; }
		
		//actionsTriggers+=Trigger
		public Assignment getActionsTriggersAssignment_15_2() { return cActionsTriggersAssignment_15_2; }
		
		//Trigger
		public RuleCall getActionsTriggersTriggerParserRuleCall_15_2_0() { return cActionsTriggersTriggerParserRuleCall_15_2_0; }
		
		//( actionsTriggers+=Trigger)*
		public Assignment getActionsTriggersAssignment_15_3() { return cActionsTriggersAssignment_15_3; }
		
		//Trigger
		public RuleCall getActionsTriggersTriggerParserRuleCall_15_3_0() { return cActionsTriggersTriggerParserRuleCall_15_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_15_4() { return cRightCurlyBracketKeyword_15_4; }
		
		//('Collisions' '{' collisions+=Collision ( collisions+=Collision)* '}')?
		public Group getGroup_16() { return cGroup_16; }
		
		//'Collisions'
		public Keyword getCollisionsKeyword_16_0() { return cCollisionsKeyword_16_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_16_1() { return cLeftCurlyBracketKeyword_16_1; }
		
		//collisions+=Collision
		public Assignment getCollisionsAssignment_16_2() { return cCollisionsAssignment_16_2; }
		
		//Collision
		public RuleCall getCollisionsCollisionParserRuleCall_16_2_0() { return cCollisionsCollisionParserRuleCall_16_2_0; }
		
		//( collisions+=Collision)*
		public Assignment getCollisionsAssignment_16_3() { return cCollisionsAssignment_16_3; }
		
		//Collision
		public RuleCall getCollisionsCollisionParserRuleCall_16_3_0() { return cCollisionsCollisionParserRuleCall_16_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_16_4() { return cRightCurlyBracketKeyword_16_4; }
		
		//('Buttons' '{' gamepad+=GamePad ( gamepad+=GamePad)* '}')?
		public Group getGroup_17() { return cGroup_17; }
		
		//'Buttons'
		public Keyword getButtonsKeyword_17_0() { return cButtonsKeyword_17_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_17_1() { return cLeftCurlyBracketKeyword_17_1; }
		
		//gamepad+=GamePad
		public Assignment getGamepadAssignment_17_2() { return cGamepadAssignment_17_2; }
		
		//GamePad
		public RuleCall getGamepadGamePadParserRuleCall_17_2_0() { return cGamepadGamePadParserRuleCall_17_2_0; }
		
		//( gamepad+=GamePad)*
		public Assignment getGamepadAssignment_17_3() { return cGamepadAssignment_17_3; }
		
		//GamePad
		public RuleCall getGamepadGamePadParserRuleCall_17_3_0() { return cGamepadGamePadParserRuleCall_17_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_17_4() { return cRightCurlyBracketKeyword_17_4; }
		
		//('Elements' '{' objInit+=ObjInit ( objInit+=ObjInit)* '}')?
		public Group getGroup_18() { return cGroup_18; }
		
		//'Elements'
		public Keyword getElementsKeyword_18_0() { return cElementsKeyword_18_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_18_1() { return cLeftCurlyBracketKeyword_18_1; }
		
		//objInit+=ObjInit
		public Assignment getObjInitAssignment_18_2() { return cObjInitAssignment_18_2; }
		
		//ObjInit
		public RuleCall getObjInitObjInitParserRuleCall_18_2_0() { return cObjInitObjInitParserRuleCall_18_2_0; }
		
		//( objInit+=ObjInit)*
		public Assignment getObjInitAssignment_18_3() { return cObjInitAssignment_18_3; }
		
		//ObjInit
		public RuleCall getObjInitObjInitParserRuleCall_18_3_0() { return cObjInitObjInitParserRuleCall_18_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_18_4() { return cRightCurlyBracketKeyword_18_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_19() { return cRightCurlyBracketKeyword_19; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeEStringParserRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMinAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMinEIntParserRuleCall_4_0 = (RuleCall)cMinAssignment_4.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cMaxAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMaxAttributeMaxParserRuleCall_6_0 = (RuleCall)cMaxAssignment_6.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cEqualsSignKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cDefaultAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cDefaultConstantParserRuleCall_9_0 = (RuleCall)cDefaultAssignment_9.eContents().get(0);
		private final Assignment cIsParamAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final Keyword cIsParamIsParamKeyword_10_0 = (Keyword)cIsParamAssignment_10.eContents().get(0);
		private final Assignment cIsKeyAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final Keyword cIsKeyIsKeyKeyword_11_0 = (Keyword)cIsKeyAssignment_11.eContents().get(0);
		private final Assignment cReadOnlyAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final Keyword cReadOnlyReadOnlyKeyword_12_0 = (Keyword)cReadOnlyAssignment_12.eContents().get(0);
		
		//Attribute returns Attribute:
		//    name=EString ':' type=EString '[' min=EInt '..' max=AttributeMax ']' '=' default=Constant
		//    (isParam?='isParam')?
		//    (isKey?='isKey')?
		//    (readOnly?='readOnly')?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString ':' type=EString '[' min=EInt '..' max=AttributeMax ']' '=' default=Constant
		//(isParam?='isParam')?
		//(isKey?='isKey')?
		//(readOnly?='readOnly')?
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//type=EString
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_2_0() { return cTypeEStringParserRuleCall_2_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//min=EInt
		public Assignment getMinAssignment_4() { return cMinAssignment_4; }
		
		//EInt
		public RuleCall getMinEIntParserRuleCall_4_0() { return cMinEIntParserRuleCall_4_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_5() { return cFullStopFullStopKeyword_5; }
		
		//max=AttributeMax
		public Assignment getMaxAssignment_6() { return cMaxAssignment_6; }
		
		//AttributeMax
		public RuleCall getMaxAttributeMaxParserRuleCall_6_0() { return cMaxAttributeMaxParserRuleCall_6_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_7() { return cRightSquareBracketKeyword_7; }
		
		//'='
		public Keyword getEqualsSignKeyword_8() { return cEqualsSignKeyword_8; }
		
		//default=Constant
		public Assignment getDefaultAssignment_9() { return cDefaultAssignment_9; }
		
		//Constant
		public RuleCall getDefaultConstantParserRuleCall_9_0() { return cDefaultConstantParserRuleCall_9_0; }
		
		//(isParam?='isParam')?
		public Assignment getIsParamAssignment_10() { return cIsParamAssignment_10; }
		
		//'isParam'
		public Keyword getIsParamIsParamKeyword_10_0() { return cIsParamIsParamKeyword_10_0; }
		
		//(isKey?='isKey')?
		public Assignment getIsKeyAssignment_11() { return cIsKeyAssignment_11; }
		
		//'isKey'
		public Keyword getIsKeyIsKeyKeyword_11_0() { return cIsKeyIsKeyKeyword_11_0; }
		
		//(readOnly?='readOnly')?
		public Assignment getReadOnlyAssignment_12() { return cReadOnlyAssignment_12; }
		
		//'readOnly'
		public Keyword getReadOnlyReadOnlyKeyword_12_0() { return cReadOnlyReadOnlyKeyword_12_0; }
	}
	public class AttributeMaxElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.AttributeMax");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cAsteriskKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AttributeMax returns ecore::EIntegerObject:
		//    '*' | INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'*' | INT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'*'
		public Keyword getAsteriskKeyword_0() { return cAsteriskKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class ReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Reference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cContaintmentKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cContaintmentAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cContaintmentEStringParserRuleCall_1_1_0 = (RuleCall)cContaintmentAssignment_1_1.eContents().get(0);
		private final Keyword cMinKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMinAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMinEIntParserRuleCall_3_0 = (RuleCall)cMinAssignment_3.eContents().get(0);
		private final Keyword cMaxKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cMaxAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cMaxEIntParserRuleCall_5_0 = (RuleCall)cMaxAssignment_5.eContents().get(0);
		private final Keyword cTargetKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTargetAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cTargetEStringParserRuleCall_7_0 = (RuleCall)cTargetAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cOppositeKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cOppositeAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cOppositeEStringParserRuleCall_8_1_0 = (RuleCall)cOppositeAssignment_8_1.eContents().get(0);
		
		//Reference returns Reference:
		//    name=EString
		//        ('containtment' containtment=EString)?
		//        'min' min=EInt
		//        'max' max=EInt
		//        'target' target=EString
		//        ('opposite' opposite=EString)?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString
		//    ('containtment' containtment=EString)?
		//    'min' min=EInt
		//    'max' max=EInt
		//    'target' target=EString
		//    ('opposite' opposite=EString)?
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//('containtment' containtment=EString)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'containtment'
		public Keyword getContaintmentKeyword_1_0() { return cContaintmentKeyword_1_0; }
		
		//containtment=EString
		public Assignment getContaintmentAssignment_1_1() { return cContaintmentAssignment_1_1; }
		
		//EString
		public RuleCall getContaintmentEStringParserRuleCall_1_1_0() { return cContaintmentEStringParserRuleCall_1_1_0; }
		
		//'min'
		public Keyword getMinKeyword_2() { return cMinKeyword_2; }
		
		//min=EInt
		public Assignment getMinAssignment_3() { return cMinAssignment_3; }
		
		//EInt
		public RuleCall getMinEIntParserRuleCall_3_0() { return cMinEIntParserRuleCall_3_0; }
		
		//'max'
		public Keyword getMaxKeyword_4() { return cMaxKeyword_4; }
		
		//max=EInt
		public Assignment getMaxAssignment_5() { return cMaxAssignment_5; }
		
		//EInt
		public RuleCall getMaxEIntParserRuleCall_5_0() { return cMaxEIntParserRuleCall_5_0; }
		
		//'target'
		public Keyword getTargetKeyword_6() { return cTargetKeyword_6; }
		
		//target=EString
		public Assignment getTargetAssignment_7() { return cTargetAssignment_7; }
		
		//EString
		public RuleCall getTargetEStringParserRuleCall_7_0() { return cTargetEStringParserRuleCall_7_0; }
		
		//('opposite' opposite=EString)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'opposite'
		public Keyword getOppositeKeyword_8_0() { return cOppositeKeyword_8_0; }
		
		//opposite=EString
		public Assignment getOppositeAssignment_8_1() { return cOppositeAssignment_8_1; }
		
		//EString
		public RuleCall getOppositeEStringParserRuleCall_8_1_0() { return cOppositeEStringParserRuleCall_8_1_0; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class GraphicClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.GraphicClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cElementKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOntoClassAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cOntoClassClassCrossReference_1_0 = (CrossReference)cOntoClassAssignment_1.eContents().get(0);
		private final RuleCall cOntoClassClassEStringParserRuleCall_1_0_1 = (RuleCall)cOntoClassClassCrossReference_1_0.eContents().get(1);
		private final Keyword cVersionsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVersionsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVersionsVersionsParserRuleCall_4_0 = (RuleCall)cVersionsAssignment_4.eContents().get(0);
		private final Assignment cVersionsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cVersionsVersionsParserRuleCall_5_0 = (RuleCall)cVersionsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cConstraintsKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cConstraintsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cConstraintsConstraintsParserRuleCall_9_0 = (RuleCall)cConstraintsAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//GraphicClass returns GraphicClass:
		//    'element' ontoClass=[Class|EString]
		//    'versions' '{' versions+=Versions ( versions+=Versions)* '}'
		//    'constraints' '{' constraints=Constraints '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'element' ontoClass=[Class|EString]
		//'versions' '{' versions+=Versions ( versions+=Versions)* '}'
		//'constraints' '{' constraints=Constraints '}'
		public Group getGroup() { return cGroup; }
		
		//'element'
		public Keyword getElementKeyword_0() { return cElementKeyword_0; }
		
		//ontoClass=[Class|EString]
		public Assignment getOntoClassAssignment_1() { return cOntoClassAssignment_1; }
		
		//[Class|EString]
		public CrossReference getOntoClassClassCrossReference_1_0() { return cOntoClassClassCrossReference_1_0; }
		
		//EString
		public RuleCall getOntoClassClassEStringParserRuleCall_1_0_1() { return cOntoClassClassEStringParserRuleCall_1_0_1; }
		
		//'versions'
		public Keyword getVersionsKeyword_2() { return cVersionsKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//versions+=Versions
		public Assignment getVersionsAssignment_4() { return cVersionsAssignment_4; }
		
		//Versions
		public RuleCall getVersionsVersionsParserRuleCall_4_0() { return cVersionsVersionsParserRuleCall_4_0; }
		
		//( versions+=Versions)*
		public Assignment getVersionsAssignment_5() { return cVersionsAssignment_5; }
		
		//Versions
		public RuleCall getVersionsVersionsParserRuleCall_5_0() { return cVersionsVersionsParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
		
		//'constraints'
		public Keyword getConstraintsKeyword_7() { return cConstraintsKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//constraints=Constraints
		public Assignment getConstraintsAssignment_9() { return cConstraintsAssignment_9; }
		
		//Constraints
		public RuleCall getConstraintsConstraintsParserRuleCall_9_0() { return cConstraintsConstraintsParserRuleCall_9_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class ConstraintsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Constraints");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPlaneKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPlanesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPlanesPlanesEnumRuleCall_1_0 = (RuleCall)cPlanesAssignment_1.eContents().get(0);
		private final Assignment cOverlappingAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cOverlappingOverlapsKeyword_2_0 = (Keyword)cOverlappingAssignment_2.eContents().get(0);
		private final Keyword cSizeMinKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSizeMinAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSizeMinEDoubleParserRuleCall_4_0 = (RuleCall)cSizeMinAssignment_4.eContents().get(0);
		private final Keyword cSizeMaxKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSizeMaxAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSizeMaxEDoubleParserRuleCall_6_0 = (RuleCall)cSizeMaxAssignment_6.eContents().get(0);
		private final Keyword cXVariationKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cXToOriginPosAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cXToOriginPosEDoubleParserRuleCall_8_0 = (RuleCall)cXToOriginPosAssignment_8.eContents().get(0);
		private final Keyword cYVariationKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cYToOriginPosAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cYToOriginPosEDoubleParserRuleCall_10_0 = (RuleCall)cYToOriginPosAssignment_10.eContents().get(0);
		private final Keyword cZVariationKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cZToOriginPosAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cZToOriginPosEDoubleParserRuleCall_12_0 = (RuleCall)cZToOriginPosAssignment_12.eContents().get(0);
		private final Keyword cRotationKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cRotationAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cRotationEIntParserRuleCall_14_0 = (RuleCall)cRotationAssignment_14.eContents().get(0);
		
		//Constraints returns Constraints:
		//    'plane' planes=Planes
		//    overlapping?='overlaps'
		//    'sizeMin' sizeMin=EDouble
		//    'sizeMax' sizeMax=EDouble
		//    'xVariation' xToOriginPos=EDouble
		//    'yVariation' yToOriginPos=EDouble
		//    'zVariation' zToOriginPos=EDouble
		//    'rotation' rotation=EInt
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'plane' planes=Planes
		//overlapping?='overlaps'
		//'sizeMin' sizeMin=EDouble
		//'sizeMax' sizeMax=EDouble
		//'xVariation' xToOriginPos=EDouble
		//'yVariation' yToOriginPos=EDouble
		//'zVariation' zToOriginPos=EDouble
		//'rotation' rotation=EInt
		public Group getGroup() { return cGroup; }
		
		//'plane'
		public Keyword getPlaneKeyword_0() { return cPlaneKeyword_0; }
		
		//planes=Planes
		public Assignment getPlanesAssignment_1() { return cPlanesAssignment_1; }
		
		//Planes
		public RuleCall getPlanesPlanesEnumRuleCall_1_0() { return cPlanesPlanesEnumRuleCall_1_0; }
		
		//overlapping?='overlaps'
		public Assignment getOverlappingAssignment_2() { return cOverlappingAssignment_2; }
		
		//'overlaps'
		public Keyword getOverlappingOverlapsKeyword_2_0() { return cOverlappingOverlapsKeyword_2_0; }
		
		//'sizeMin'
		public Keyword getSizeMinKeyword_3() { return cSizeMinKeyword_3; }
		
		//sizeMin=EDouble
		public Assignment getSizeMinAssignment_4() { return cSizeMinAssignment_4; }
		
		//EDouble
		public RuleCall getSizeMinEDoubleParserRuleCall_4_0() { return cSizeMinEDoubleParserRuleCall_4_0; }
		
		//'sizeMax'
		public Keyword getSizeMaxKeyword_5() { return cSizeMaxKeyword_5; }
		
		//sizeMax=EDouble
		public Assignment getSizeMaxAssignment_6() { return cSizeMaxAssignment_6; }
		
		//EDouble
		public RuleCall getSizeMaxEDoubleParserRuleCall_6_0() { return cSizeMaxEDoubleParserRuleCall_6_0; }
		
		//'xVariation'
		public Keyword getXVariationKeyword_7() { return cXVariationKeyword_7; }
		
		//xToOriginPos=EDouble
		public Assignment getXToOriginPosAssignment_8() { return cXToOriginPosAssignment_8; }
		
		//EDouble
		public RuleCall getXToOriginPosEDoubleParserRuleCall_8_0() { return cXToOriginPosEDoubleParserRuleCall_8_0; }
		
		//'yVariation'
		public Keyword getYVariationKeyword_9() { return cYVariationKeyword_9; }
		
		//yToOriginPos=EDouble
		public Assignment getYToOriginPosAssignment_10() { return cYToOriginPosAssignment_10; }
		
		//EDouble
		public RuleCall getYToOriginPosEDoubleParserRuleCall_10_0() { return cYToOriginPosEDoubleParserRuleCall_10_0; }
		
		//'zVariation'
		public Keyword getZVariationKeyword_11() { return cZVariationKeyword_11; }
		
		//zToOriginPos=EDouble
		public Assignment getZToOriginPosAssignment_12() { return cZToOriginPosAssignment_12; }
		
		//EDouble
		public RuleCall getZToOriginPosEDoubleParserRuleCall_12_0() { return cZToOriginPosEDoubleParserRuleCall_12_0; }
		
		//'rotation'
		public Keyword getRotationKeyword_13() { return cRotationKeyword_13; }
		
		//rotation=EInt
		public Assignment getRotationAssignment_14() { return cRotationAssignment_14; }
		
		//EInt
		public RuleCall getRotationEIntParserRuleCall_14_0() { return cRotationEIntParserRuleCall_14_0; }
	}
	public class ConnectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Connection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConnectionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeEStringParserRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Keyword cColorKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cColorAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cColorEStringParserRuleCall_6_0 = (RuleCall)cColorAssignment_6.eContents().get(0);
		private final Keyword cTextColorKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cTextColorAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cTextColorEStringParserRuleCall_8_0 = (RuleCall)cTextColorAssignment_8.eContents().get(0);
		private final Keyword cDecoratorKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cDecoratorAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cDecoratorEStringParserRuleCall_10_0 = (RuleCall)cDecoratorAssignment_10.eContents().get(0);
		private final Keyword cDecoratorPosKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cDecoratorPosAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cDecoratorPosEStringParserRuleCall_12_0 = (RuleCall)cDecoratorPosAssignment_12.eContents().get(0);
		private final Keyword cPatternKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cPatternAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cPatternEStringParserRuleCall_14_0 = (RuleCall)cPatternAssignment_14.eContents().get(0);
		private final Keyword cWidthKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cWidthAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cWidthEDoubleParserRuleCall_16_0 = (RuleCall)cWidthAssignment_16.eContents().get(0);
		private final Keyword cPositionKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Assignment cPositionAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final RuleCall cPositionEStringParserRuleCall_18_0 = (RuleCall)cPositionAssignment_18.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		
		//Connection returns Connection:
		//    'Connection'
		//    name=EString
		//    '{'
		//        'type' type=EString
		//        'color' color=EString
		//        'textColor' textColor=EString
		//        'decorator' decorator=EString
		//        'decoratorPos' decoratorPos=EString
		//        'pattern' pattern=EString
		//        'width' width=EDouble
		//        'position' position=EString
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Connection'
		//name=EString
		//'{'
		//    'type' type=EString
		//    'color' color=EString
		//    'textColor' textColor=EString
		//    'decorator' decorator=EString
		//    'decoratorPos' decoratorPos=EString
		//    'pattern' pattern=EString
		//    'width' width=EDouble
		//    'position' position=EString
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Connection'
		public Keyword getConnectionKeyword_0() { return cConnectionKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'type'
		public Keyword getTypeKeyword_3() { return cTypeKeyword_3; }
		
		//type=EString
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_4_0() { return cTypeEStringParserRuleCall_4_0; }
		
		//'color'
		public Keyword getColorKeyword_5() { return cColorKeyword_5; }
		
		//color=EString
		public Assignment getColorAssignment_6() { return cColorAssignment_6; }
		
		//EString
		public RuleCall getColorEStringParserRuleCall_6_0() { return cColorEStringParserRuleCall_6_0; }
		
		//'textColor'
		public Keyword getTextColorKeyword_7() { return cTextColorKeyword_7; }
		
		//textColor=EString
		public Assignment getTextColorAssignment_8() { return cTextColorAssignment_8; }
		
		//EString
		public RuleCall getTextColorEStringParserRuleCall_8_0() { return cTextColorEStringParserRuleCall_8_0; }
		
		//'decorator'
		public Keyword getDecoratorKeyword_9() { return cDecoratorKeyword_9; }
		
		//decorator=EString
		public Assignment getDecoratorAssignment_10() { return cDecoratorAssignment_10; }
		
		//EString
		public RuleCall getDecoratorEStringParserRuleCall_10_0() { return cDecoratorEStringParserRuleCall_10_0; }
		
		//'decoratorPos'
		public Keyword getDecoratorPosKeyword_11() { return cDecoratorPosKeyword_11; }
		
		//decoratorPos=EString
		public Assignment getDecoratorPosAssignment_12() { return cDecoratorPosAssignment_12; }
		
		//EString
		public RuleCall getDecoratorPosEStringParserRuleCall_12_0() { return cDecoratorPosEStringParserRuleCall_12_0; }
		
		//'pattern'
		public Keyword getPatternKeyword_13() { return cPatternKeyword_13; }
		
		//pattern=EString
		public Assignment getPatternAssignment_14() { return cPatternAssignment_14; }
		
		//EString
		public RuleCall getPatternEStringParserRuleCall_14_0() { return cPatternEStringParserRuleCall_14_0; }
		
		//'width'
		public Keyword getWidthKeyword_15() { return cWidthKeyword_15; }
		
		//width=EDouble
		public Assignment getWidthAssignment_16() { return cWidthAssignment_16; }
		
		//EDouble
		public RuleCall getWidthEDoubleParserRuleCall_16_0() { return cWidthEDoubleParserRuleCall_16_0; }
		
		//'position'
		public Keyword getPositionKeyword_17() { return cPositionKeyword_17; }
		
		//position=EString
		public Assignment getPositionAssignment_18() { return cPositionAssignment_18; }
		
		//EString
		public RuleCall getPositionEStringParserRuleCall_18_0() { return cPositionEStringParserRuleCall_18_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_19() { return cRightCurlyBracketKeyword_19; }
	}
	public class VersionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Versions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cURLAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cURLEStringParserRuleCall_2_0 = (RuleCall)cURLAssignment_2.eContents().get(0);
		
		//Versions returns Versions:
		//    name=EString '=' URL=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString '=' URL=EString
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//URL=EString
		public Assignment getURLAssignment_2() { return cURLAssignment_2; }
		
		//EString
		public RuleCall getURLEStringParserRuleCall_2_0() { return cURLEStringParserRuleCall_2_0; }
	}
	public class EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.EDouble");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cEKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		
		//EDouble returns ecore::EDouble:
		//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT? '.' INT (('E'|'e') '-'? INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }
		
		//(('E'|'e') '-'? INT)?
		public Group getGroup_4() { return cGroup_4; }
		
		//('E'|'e')
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'E'
		public Keyword getEKeyword_4_0_0() { return cEKeyword_4_0_0; }
		
		//'e'
		public Keyword getEKeyword_4_0_1() { return cEKeyword_4_0_1; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4_2() { return cINTTerminalRuleCall_4_2; }
	}
	public class PhysicClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.PhysicClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cElementKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOntoClassAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cOntoClassClassCrossReference_1_0 = (CrossReference)cOntoClassAssignment_1.eContents().get(0);
		private final RuleCall cOntoClassClassEStringParserRuleCall_1_0_1 = (RuleCall)cOntoClassClassCrossReference_1_0.eContents().get(1);
		private final Keyword cBodyKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPhysicBodyAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPhysicBodyPhysicBodyParserRuleCall_4_0 = (RuleCall)cPhysicBodyAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cForcesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cForcesAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cForcesForceParserRuleCall_6_2_0 = (RuleCall)cForcesAssignment_6_2.eContents().get(0);
		private final Assignment cForcesAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final RuleCall cForcesForceParserRuleCall_6_3_0 = (RuleCall)cForcesAssignment_6_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cContactsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cBitMasksAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cBitMasksBitMasksParserRuleCall_7_2_0 = (RuleCall)cBitMasksAssignment_7_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		
		//PhysicClass returns PhysicClass:
		//    'element' ontoClass=[Class|EString]
		//    'body' '{' physicBody=PhysicBody '}'
		//    ('forces' '{' forces+=Force ( forces+=Force)* '}')?
		//    ('contacts' '{' bitMasks=BitMasks '}')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'element' ontoClass=[Class|EString]
		//'body' '{' physicBody=PhysicBody '}'
		//('forces' '{' forces+=Force ( forces+=Force)* '}')?
		//('contacts' '{' bitMasks=BitMasks '}')?
		public Group getGroup() { return cGroup; }
		
		//'element'
		public Keyword getElementKeyword_0() { return cElementKeyword_0; }
		
		//ontoClass=[Class|EString]
		public Assignment getOntoClassAssignment_1() { return cOntoClassAssignment_1; }
		
		//[Class|EString]
		public CrossReference getOntoClassClassCrossReference_1_0() { return cOntoClassClassCrossReference_1_0; }
		
		//EString
		public RuleCall getOntoClassClassEStringParserRuleCall_1_0_1() { return cOntoClassClassEStringParserRuleCall_1_0_1; }
		
		//'body'
		public Keyword getBodyKeyword_2() { return cBodyKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//physicBody=PhysicBody
		public Assignment getPhysicBodyAssignment_4() { return cPhysicBodyAssignment_4; }
		
		//PhysicBody
		public RuleCall getPhysicBodyPhysicBodyParserRuleCall_4_0() { return cPhysicBodyPhysicBodyParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
		
		//('forces' '{' forces+=Force ( forces+=Force)* '}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'forces'
		public Keyword getForcesKeyword_6_0() { return cForcesKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//forces+=Force
		public Assignment getForcesAssignment_6_2() { return cForcesAssignment_6_2; }
		
		//Force
		public RuleCall getForcesForceParserRuleCall_6_2_0() { return cForcesForceParserRuleCall_6_2_0; }
		
		//( forces+=Force)*
		public Assignment getForcesAssignment_6_3() { return cForcesAssignment_6_3; }
		
		//Force
		public RuleCall getForcesForceParserRuleCall_6_3_0() { return cForcesForceParserRuleCall_6_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//('contacts' '{' bitMasks=BitMasks '}')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'contacts'
		public Keyword getContactsKeyword_7_0() { return cContactsKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//bitMasks=BitMasks
		public Assignment getBitMasksAssignment_7_2() { return cBitMasksAssignment_7_2; }
		
		//BitMasks
		public RuleCall getBitMasksBitMasksParserRuleCall_7_2_0() { return cBitMasksBitMasksParserRuleCall_7_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_3() { return cRightCurlyBracketKeyword_7_3; }
	}
	public class PhysicBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.PhysicBody");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMassKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMassAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMassEDoubleParserRuleCall_1_0 = (RuleCall)cMassAssignment_1.eContents().get(0);
		private final Keyword cBodyTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cBodyTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBodyTypeBodyTypeEnumRuleCall_3_0 = (RuleCall)cBodyTypeAssignment_3.eContents().get(0);
		private final Keyword cChargeKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cChargeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cChargeEDoubleParserRuleCall_5_0 = (RuleCall)cChargeAssignment_5.eContents().get(0);
		private final Keyword cFrictionKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cFrictionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cFrictionEDoubleParserRuleCall_7_0 = (RuleCall)cFrictionAssignment_7.eContents().get(0);
		private final Keyword cRollingFrictionKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cRollingFrictionAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cRollingFrictionEDoubleParserRuleCall_9_0 = (RuleCall)cRollingFrictionAssignment_9.eContents().get(0);
		private final Keyword cRestitutionKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cRestitutionAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cRestitutionEDoubleParserRuleCall_11_0 = (RuleCall)cRestitutionAssignment_11.eContents().get(0);
		private final Keyword cDampingKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cDampingAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cDampingEDoubleParserRuleCall_13_0 = (RuleCall)cDampingAssignment_13.eContents().get(0);
		private final Keyword cAngularDampingKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cAngularDampingAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cAngularDampingEDoubleParserRuleCall_15_0 = (RuleCall)cAngularDampingAssignment_15.eContents().get(0);
		
		//PhysicBody returns PhysicBody:
		//    'mass' mass=EDouble
		//    'bodyType' bodyType=BodyType
		//    'charge' charge=EDouble
		//    'friction' friction=EDouble
		//    'rollingFriction' rollingFriction=EDouble
		//    'restitution' restitution=EDouble
		//    'damping' damping=EDouble
		//    'angularDamping' angularDamping=EDouble
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'mass' mass=EDouble
		//'bodyType' bodyType=BodyType
		//'charge' charge=EDouble
		//'friction' friction=EDouble
		//'rollingFriction' rollingFriction=EDouble
		//'restitution' restitution=EDouble
		//'damping' damping=EDouble
		//'angularDamping' angularDamping=EDouble
		public Group getGroup() { return cGroup; }
		
		//'mass'
		public Keyword getMassKeyword_0() { return cMassKeyword_0; }
		
		//mass=EDouble
		public Assignment getMassAssignment_1() { return cMassAssignment_1; }
		
		//EDouble
		public RuleCall getMassEDoubleParserRuleCall_1_0() { return cMassEDoubleParserRuleCall_1_0; }
		
		//'bodyType'
		public Keyword getBodyTypeKeyword_2() { return cBodyTypeKeyword_2; }
		
		//bodyType=BodyType
		public Assignment getBodyTypeAssignment_3() { return cBodyTypeAssignment_3; }
		
		//BodyType
		public RuleCall getBodyTypeBodyTypeEnumRuleCall_3_0() { return cBodyTypeBodyTypeEnumRuleCall_3_0; }
		
		//'charge'
		public Keyword getChargeKeyword_4() { return cChargeKeyword_4; }
		
		//charge=EDouble
		public Assignment getChargeAssignment_5() { return cChargeAssignment_5; }
		
		//EDouble
		public RuleCall getChargeEDoubleParserRuleCall_5_0() { return cChargeEDoubleParserRuleCall_5_0; }
		
		//'friction'
		public Keyword getFrictionKeyword_6() { return cFrictionKeyword_6; }
		
		//friction=EDouble
		public Assignment getFrictionAssignment_7() { return cFrictionAssignment_7; }
		
		//EDouble
		public RuleCall getFrictionEDoubleParserRuleCall_7_0() { return cFrictionEDoubleParserRuleCall_7_0; }
		
		//'rollingFriction'
		public Keyword getRollingFrictionKeyword_8() { return cRollingFrictionKeyword_8; }
		
		//rollingFriction=EDouble
		public Assignment getRollingFrictionAssignment_9() { return cRollingFrictionAssignment_9; }
		
		//EDouble
		public RuleCall getRollingFrictionEDoubleParserRuleCall_9_0() { return cRollingFrictionEDoubleParserRuleCall_9_0; }
		
		//'restitution'
		public Keyword getRestitutionKeyword_10() { return cRestitutionKeyword_10; }
		
		//restitution=EDouble
		public Assignment getRestitutionAssignment_11() { return cRestitutionAssignment_11; }
		
		//EDouble
		public RuleCall getRestitutionEDoubleParserRuleCall_11_0() { return cRestitutionEDoubleParserRuleCall_11_0; }
		
		//'damping'
		public Keyword getDampingKeyword_12() { return cDampingKeyword_12; }
		
		//damping=EDouble
		public Assignment getDampingAssignment_13() { return cDampingAssignment_13; }
		
		//EDouble
		public RuleCall getDampingEDoubleParserRuleCall_13_0() { return cDampingEDoubleParserRuleCall_13_0; }
		
		//'angularDamping'
		public Keyword getAngularDampingKeyword_14() { return cAngularDampingKeyword_14; }
		
		//angularDamping=EDouble
		public Assignment getAngularDampingAssignment_15() { return cAngularDampingAssignment_15; }
		
		//EDouble
		public RuleCall getAngularDampingEDoubleParserRuleCall_15_0() { return cAngularDampingEDoubleParserRuleCall_15_0; }
	}
	public class BitMasksElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.BitMasks");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCollisionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cCollisionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cCollisionClassCrossReference_1_0 = (CrossReference)cCollisionAssignment_1.eContents().get(0);
		private final RuleCall cCollisionClassEStringParserRuleCall_1_0_1 = (RuleCall)cCollisionClassCrossReference_1_0.eContents().get(1);
		private final Assignment cCollisionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cCollisionClassCrossReference_2_0 = (CrossReference)cCollisionAssignment_2.eContents().get(0);
		private final RuleCall cCollisionClassEStringParserRuleCall_2_0_1 = (RuleCall)cCollisionClassCrossReference_2_0.eContents().get(1);
		private final Keyword cContactKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cContactAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cContactClassCrossReference_4_0 = (CrossReference)cContactAssignment_4.eContents().get(0);
		private final RuleCall cContactClassEStringParserRuleCall_4_0_1 = (RuleCall)cContactClassCrossReference_4_0.eContents().get(1);
		private final Assignment cContactAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cContactClassCrossReference_5_0 = (CrossReference)cContactAssignment_5.eContents().get(0);
		private final RuleCall cContactClassEStringParserRuleCall_5_0_1 = (RuleCall)cContactClassCrossReference_5_0.eContents().get(1);
		
		//BitMasks returns BitMasks:
		//    'collision' collision+=[Class|EString] ( collision+=[Class|EString])*
		//    'contact' contact+=[Class|EString] ( contact+=[Class|EString])*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'collision' collision+=[Class|EString] ( collision+=[Class|EString])*
		//'contact' contact+=[Class|EString] ( contact+=[Class|EString])*
		public Group getGroup() { return cGroup; }
		
		//'collision'
		public Keyword getCollisionKeyword_0() { return cCollisionKeyword_0; }
		
		//collision+=[Class|EString]
		public Assignment getCollisionAssignment_1() { return cCollisionAssignment_1; }
		
		//[Class|EString]
		public CrossReference getCollisionClassCrossReference_1_0() { return cCollisionClassCrossReference_1_0; }
		
		//EString
		public RuleCall getCollisionClassEStringParserRuleCall_1_0_1() { return cCollisionClassEStringParserRuleCall_1_0_1; }
		
		//( collision+=[Class|EString])*
		public Assignment getCollisionAssignment_2() { return cCollisionAssignment_2; }
		
		//[Class|EString]
		public CrossReference getCollisionClassCrossReference_2_0() { return cCollisionClassCrossReference_2_0; }
		
		//EString
		public RuleCall getCollisionClassEStringParserRuleCall_2_0_1() { return cCollisionClassEStringParserRuleCall_2_0_1; }
		
		//'contact'
		public Keyword getContactKeyword_3() { return cContactKeyword_3; }
		
		//contact+=[Class|EString]
		public Assignment getContactAssignment_4() { return cContactAssignment_4; }
		
		//[Class|EString]
		public CrossReference getContactClassCrossReference_4_0() { return cContactClassCrossReference_4_0; }
		
		//EString
		public RuleCall getContactClassEStringParserRuleCall_4_0_1() { return cContactClassEStringParserRuleCall_4_0_1; }
		
		//( contact+=[Class|EString])*
		public Assignment getContactAssignment_5() { return cContactAssignment_5; }
		
		//[Class|EString]
		public CrossReference getContactClassCrossReference_5_0() { return cContactClassCrossReference_5_0; }
		
		//EString
		public RuleCall getContactClassEStringParserRuleCall_5_0_1() { return cContactClassEStringParserRuleCall_5_0_1; }
	}
	public class ForceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Force");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cGestureKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cGestureAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cGestureGestureEnumRuleCall_3_0 = (RuleCall)cGestureAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cXVectorAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cXVectorEDoubleParserRuleCall_4_1_0 = (RuleCall)cXVectorAssignment_4_1.eContents().get(0);
		private final Keyword cCommaKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cYVectorAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cYVectorEDoubleParserRuleCall_4_3_0 = (RuleCall)cYVectorAssignment_4_3.eContents().get(0);
		private final Keyword cCommaKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Assignment cZVectorAssignment_4_5 = (Assignment)cGroup_4.eContents().get(5);
		private final RuleCall cZVectorEDoubleParserRuleCall_4_5_0 = (RuleCall)cZVectorAssignment_4_5.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_6 = (Keyword)cGroup_4.eContents().get(6);
		
		//Force returns Force:
		//    name=EString ':' 'gesture' gesture=Gesture
		//    ('[' xVector=EDouble ',' yVector=EDouble ',' zVector=EDouble ']')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString ':' 'gesture' gesture=Gesture
		//('[' xVector=EDouble ',' yVector=EDouble ',' zVector=EDouble ']')?
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'gesture'
		public Keyword getGestureKeyword_2() { return cGestureKeyword_2; }
		
		//gesture=Gesture
		public Assignment getGestureAssignment_3() { return cGestureAssignment_3; }
		
		//Gesture
		public RuleCall getGestureGestureEnumRuleCall_3_0() { return cGestureGestureEnumRuleCall_3_0; }
		
		//('[' xVector=EDouble ',' yVector=EDouble ',' zVector=EDouble ']')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_4_0() { return cLeftSquareBracketKeyword_4_0; }
		
		//xVector=EDouble
		public Assignment getXVectorAssignment_4_1() { return cXVectorAssignment_4_1; }
		
		//EDouble
		public RuleCall getXVectorEDoubleParserRuleCall_4_1_0() { return cXVectorEDoubleParserRuleCall_4_1_0; }
		
		//','
		public Keyword getCommaKeyword_4_2() { return cCommaKeyword_4_2; }
		
		//yVector=EDouble
		public Assignment getYVectorAssignment_4_3() { return cYVectorAssignment_4_3; }
		
		//EDouble
		public RuleCall getYVectorEDoubleParserRuleCall_4_3_0() { return cYVectorEDoubleParserRuleCall_4_3_0; }
		
		//','
		public Keyword getCommaKeyword_4_4() { return cCommaKeyword_4_4; }
		
		//zVector=EDouble
		public Assignment getZVectorAssignment_4_5() { return cZVectorAssignment_4_5; }
		
		//EDouble
		public RuleCall getZVectorEDoubleParserRuleCall_4_5_0() { return cZVectorEDoubleParserRuleCall_4_5_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4_6() { return cRightSquareBracketKeyword_4_6; }
	}
	public class GamePadElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.GamePad");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTriggerAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTriggerTriggerCrossReference_2_0 = (CrossReference)cTriggerAssignment_2.eContents().get(0);
		private final RuleCall cTriggerTriggerEStringParserRuleCall_2_0_1 = (RuleCall)cTriggerTriggerCrossReference_2_0.eContents().get(1);
		
		//GamePad returns GamePad:
		//    name=EString '->' trigger=[Trigger|EString]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString '->' trigger=[Trigger|EString]
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }
		
		//trigger=[Trigger|EString]
		public Assignment getTriggerAssignment_2() { return cTriggerAssignment_2; }
		
		//[Trigger|EString]
		public CrossReference getTriggerTriggerCrossReference_2_0() { return cTriggerTriggerCrossReference_2_0; }
		
		//EString
		public RuleCall getTriggerTriggerEStringParserRuleCall_2_0_1() { return cTriggerTriggerEStringParserRuleCall_2_0_1; }
	}
	public class ScoreSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.ScoreSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStartKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cStartAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cStartEIntParserRuleCall_1_0 = (RuleCall)cStartAssignment_1.eContents().get(0);
		private final Keyword cFinishKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFinishAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFinishNoLimitParserRuleCall_3_0 = (RuleCall)cFinishAssignment_3.eContents().get(0);
		private final Keyword cLivesKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cLivesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cLivesEIntParserRuleCall_5_0 = (RuleCall)cLivesAssignment_5.eContents().get(0);
		
		//ScoreSystem returns ScoreSystem:
		//    'start' start=EInt
		//    'finish' finish=NoLimit
		//    'lives' lives=EInt
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'start' start=EInt
		//'finish' finish=NoLimit
		//'lives' lives=EInt
		public Group getGroup() { return cGroup; }
		
		//'start'
		public Keyword getStartKeyword_0() { return cStartKeyword_0; }
		
		//start=EInt
		public Assignment getStartAssignment_1() { return cStartAssignment_1; }
		
		//EInt
		public RuleCall getStartEIntParserRuleCall_1_0() { return cStartEIntParserRuleCall_1_0; }
		
		//'finish'
		public Keyword getFinishKeyword_2() { return cFinishKeyword_2; }
		
		//finish=NoLimit
		public Assignment getFinishAssignment_3() { return cFinishAssignment_3; }
		
		//NoLimit
		public RuleCall getFinishNoLimitParserRuleCall_3_0() { return cFinishNoLimitParserRuleCall_3_0; }
		
		//'lives'
		public Keyword getLivesKeyword_4() { return cLivesKeyword_4; }
		
		//lives=EInt
		public Assignment getLivesAssignment_5() { return cLivesAssignment_5; }
		
		//EInt
		public RuleCall getLivesEIntParserRuleCall_5_0() { return cLivesEIntParserRuleCall_5_0; }
	}
	public class NoLimitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.NoLimit");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cAsteriskKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//NoLimit returns ecore::EIntegerObject:
		//    '*' | INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'*' | INT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'*'
		public Keyword getAsteriskKeyword_0() { return cAsteriskKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class TriggerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Trigger");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cActionKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cActionAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cActionBasicActionsEnumRuleCall_2_1_0 = (RuleCall)cActionAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cMessageKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMessageAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMessageEStringParserRuleCall_3_1_0 = (RuleCall)cMessageAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cScoreKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cScoreChangeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cScoreChangeEIntParserRuleCall_4_1_0 = (RuleCall)cScoreChangeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTimeEachKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTimeTriggerAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTimeTriggerEIntParserRuleCall_5_1_0 = (RuleCall)cTimeTriggerAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cChangesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cPhysicChangesAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cPhysicChangesPhysicChangeParserRuleCall_6_2_0 = (RuleCall)cPhysicChangesAssignment_6_2.eContents().get(0);
		private final Assignment cPhysicChangesAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final RuleCall cPhysicChangesPhysicChangeParserRuleCall_6_3_0 = (RuleCall)cPhysicChangesAssignment_6_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Trigger returns Trigger:
		//    name=EString '{'
		//    ('action' action=BasicActions)?
		//    ('message' message=EString)?
		//    ('score' scoreChange=EInt)?
		//    ('timeEach' timeTrigger=EInt)?
		//    ('changes' '{' physicChanges+=PhysicChange ( physicChanges+=PhysicChange)* '}' )?
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString '{'
		//('action' action=BasicActions)?
		//('message' message=EString)?
		//('score' scoreChange=EInt)?
		//('timeEach' timeTrigger=EInt)?
		//('changes' '{' physicChanges+=PhysicChange ( physicChanges+=PhysicChange)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('action' action=BasicActions)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'action'
		public Keyword getActionKeyword_2_0() { return cActionKeyword_2_0; }
		
		//action=BasicActions
		public Assignment getActionAssignment_2_1() { return cActionAssignment_2_1; }
		
		//BasicActions
		public RuleCall getActionBasicActionsEnumRuleCall_2_1_0() { return cActionBasicActionsEnumRuleCall_2_1_0; }
		
		//('message' message=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'message'
		public Keyword getMessageKeyword_3_0() { return cMessageKeyword_3_0; }
		
		//message=EString
		public Assignment getMessageAssignment_3_1() { return cMessageAssignment_3_1; }
		
		//EString
		public RuleCall getMessageEStringParserRuleCall_3_1_0() { return cMessageEStringParserRuleCall_3_1_0; }
		
		//('score' scoreChange=EInt)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'score'
		public Keyword getScoreKeyword_4_0() { return cScoreKeyword_4_0; }
		
		//scoreChange=EInt
		public Assignment getScoreChangeAssignment_4_1() { return cScoreChangeAssignment_4_1; }
		
		//EInt
		public RuleCall getScoreChangeEIntParserRuleCall_4_1_0() { return cScoreChangeEIntParserRuleCall_4_1_0; }
		
		//('timeEach' timeTrigger=EInt)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'timeEach'
		public Keyword getTimeEachKeyword_5_0() { return cTimeEachKeyword_5_0; }
		
		//timeTrigger=EInt
		public Assignment getTimeTriggerAssignment_5_1() { return cTimeTriggerAssignment_5_1; }
		
		//EInt
		public RuleCall getTimeTriggerEIntParserRuleCall_5_1_0() { return cTimeTriggerEIntParserRuleCall_5_1_0; }
		
		//('changes' '{' physicChanges+=PhysicChange ( physicChanges+=PhysicChange)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'changes'
		public Keyword getChangesKeyword_6_0() { return cChangesKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//physicChanges+=PhysicChange
		public Assignment getPhysicChangesAssignment_6_2() { return cPhysicChangesAssignment_6_2; }
		
		//PhysicChange
		public RuleCall getPhysicChangesPhysicChangeParserRuleCall_6_2_0() { return cPhysicChangesPhysicChangeParserRuleCall_6_2_0; }
		
		//( physicChanges+=PhysicChange)*
		public Assignment getPhysicChangesAssignment_6_3() { return cPhysicChangesAssignment_6_3; }
		
		//PhysicChange
		public RuleCall getPhysicChangesPhysicChangeParserRuleCall_6_3_0() { return cPhysicChangesPhysicChangeParserRuleCall_6_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class CollisionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Collision");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cElementKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cClassAAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cClassAClassCrossReference_1_0 = (CrossReference)cClassAAssignment_1.eContents().get(0);
		private final RuleCall cClassAClassEStringParserRuleCall_1_0_1 = (RuleCall)cClassAClassCrossReference_1_0.eContents().get(1);
		private final Keyword cToKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cClassBAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cClassBClassCrossReference_3_0 = (CrossReference)cClassBAssignment_3.eContents().get(0);
		private final RuleCall cClassBClassEStringParserRuleCall_3_0_1 = (RuleCall)cClassBClassCrossReference_3_0.eContents().get(1);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cActionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cActionTriggerCrossReference_5_0 = (CrossReference)cActionAssignment_5.eContents().get(0);
		private final RuleCall cActionTriggerEStringParserRuleCall_5_0_1 = (RuleCall)cActionTriggerCrossReference_5_0.eContents().get(1);
		
		//Collision returns Collision:
		//    'element' classA=[Class|EString]'to' classB=[Class|EString] '->' action=[Trigger|EString]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'element' classA=[Class|EString]'to' classB=[Class|EString] '->' action=[Trigger|EString]
		public Group getGroup() { return cGroup; }
		
		//'element'
		public Keyword getElementKeyword_0() { return cElementKeyword_0; }
		
		//classA=[Class|EString]
		public Assignment getClassAAssignment_1() { return cClassAAssignment_1; }
		
		//[Class|EString]
		public CrossReference getClassAClassCrossReference_1_0() { return cClassAClassCrossReference_1_0; }
		
		//EString
		public RuleCall getClassAClassEStringParserRuleCall_1_0_1() { return cClassAClassEStringParserRuleCall_1_0_1; }
		
		//'to'
		public Keyword getToKeyword_2() { return cToKeyword_2; }
		
		//classB=[Class|EString]
		public Assignment getClassBAssignment_3() { return cClassBAssignment_3; }
		
		//[Class|EString]
		public CrossReference getClassBClassCrossReference_3_0() { return cClassBClassCrossReference_3_0; }
		
		//EString
		public RuleCall getClassBClassEStringParserRuleCall_3_0_1() { return cClassBClassEStringParserRuleCall_3_0_1; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_4() { return cHyphenMinusGreaterThanSignKeyword_4; }
		
		//action=[Trigger|EString]
		public Assignment getActionAssignment_5() { return cActionAssignment_5; }
		
		//[Trigger|EString]
		public CrossReference getActionTriggerCrossReference_5_0() { return cActionTriggerCrossReference_5_0; }
		
		//EString
		public RuleCall getActionTriggerEStringParserRuleCall_5_0_1() { return cActionTriggerEStringParserRuleCall_5_0_1; }
	}
	public class ObjInitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.ObjInit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cClassAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cClassClassCrossReference_2_0 = (CrossReference)cClassAssignment_2.eContents().get(0);
		private final RuleCall cClassClassEStringParserRuleCall_2_0_1 = (RuleCall)cClassClassCrossReference_2_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPosXAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPosXPosOrCameraParserRuleCall_4_0 = (RuleCall)cPosXAssignment_4.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cPosYAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPosYPosOrCameraParserRuleCall_6_0 = (RuleCall)cPosYAssignment_6.eContents().get(0);
		private final Keyword cCommaKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cPosZAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cPosZPosOrCameraParserRuleCall_8_0 = (RuleCall)cPosZAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cRotationAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cRotationEIntParserRuleCall_9_1_0 = (RuleCall)cRotationAssignment_9_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cAttributesKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cAttributeAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cAttributeObjAttributeParserRuleCall_11_2_0 = (RuleCall)cAttributeAssignment_11_2.eContents().get(0);
		private final Group cGroup_11_3 = (Group)cGroup_11.eContents().get(3);
		private final Keyword cCommaKeyword_11_3_0 = (Keyword)cGroup_11_3.eContents().get(0);
		private final Assignment cAttributeAssignment_11_3_1 = (Assignment)cGroup_11_3.eContents().get(1);
		private final RuleCall cAttributeObjAttributeParserRuleCall_11_3_1_0 = (RuleCall)cAttributeAssignment_11_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11_4 = (Keyword)cGroup_11.eContents().get(4);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cRulesKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cRulesAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cRulesRuleParserRuleCall_12_2_0 = (RuleCall)cRulesAssignment_12_2.eContents().get(0);
		private final Group cGroup_12_3 = (Group)cGroup_12.eContents().get(3);
		private final Keyword cCommaKeyword_12_3_0 = (Keyword)cGroup_12_3.eContents().get(0);
		private final Assignment cRulesAssignment_12_3_1 = (Assignment)cGroup_12_3.eContents().get(1);
		private final RuleCall cRulesRuleParserRuleCall_12_3_1_0 = (RuleCall)cRulesAssignment_12_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12_4 = (Keyword)cGroup_12.eContents().get(4);
		
		//ObjInit returns ObjInit:
		//    name=EString ':' class=[Class|EString] '[' posX=PosOrCamera ',' posY=PosOrCamera ',' posZ=PosOrCamera (',' rotation=EInt)? ']'
		//    ('attributes' '{' attribute+=ObjAttribute (',' attribute+=ObjAttribute)* '}')?
		//    ('rules' '{' rules+=Rule (',' rules+=Rule)* '}')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString ':' class=[Class|EString] '[' posX=PosOrCamera ',' posY=PosOrCamera ',' posZ=PosOrCamera (',' rotation=EInt)? ']'
		//('attributes' '{' attribute+=ObjAttribute (',' attribute+=ObjAttribute)* '}')?
		//('rules' '{' rules+=Rule (',' rules+=Rule)* '}')?
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//class=[Class|EString]
		public Assignment getClassAssignment_2() { return cClassAssignment_2; }
		
		//[Class|EString]
		public CrossReference getClassClassCrossReference_2_0() { return cClassClassCrossReference_2_0; }
		
		//EString
		public RuleCall getClassClassEStringParserRuleCall_2_0_1() { return cClassClassEStringParserRuleCall_2_0_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//posX=PosOrCamera
		public Assignment getPosXAssignment_4() { return cPosXAssignment_4; }
		
		//PosOrCamera
		public RuleCall getPosXPosOrCameraParserRuleCall_4_0() { return cPosXPosOrCameraParserRuleCall_4_0; }
		
		//','
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//posY=PosOrCamera
		public Assignment getPosYAssignment_6() { return cPosYAssignment_6; }
		
		//PosOrCamera
		public RuleCall getPosYPosOrCameraParserRuleCall_6_0() { return cPosYPosOrCameraParserRuleCall_6_0; }
		
		//','
		public Keyword getCommaKeyword_7() { return cCommaKeyword_7; }
		
		//posZ=PosOrCamera
		public Assignment getPosZAssignment_8() { return cPosZAssignment_8; }
		
		//PosOrCamera
		public RuleCall getPosZPosOrCameraParserRuleCall_8_0() { return cPosZPosOrCameraParserRuleCall_8_0; }
		
		//(',' rotation=EInt)?
		public Group getGroup_9() { return cGroup_9; }
		
		//','
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }
		
		//rotation=EInt
		public Assignment getRotationAssignment_9_1() { return cRotationAssignment_9_1; }
		
		//EInt
		public RuleCall getRotationEIntParserRuleCall_9_1_0() { return cRotationEIntParserRuleCall_9_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_10() { return cRightSquareBracketKeyword_10; }
		
		//('attributes' '{' attribute+=ObjAttribute (',' attribute+=ObjAttribute)* '}')?
		public Group getGroup_11() { return cGroup_11; }
		
		//'attributes'
		public Keyword getAttributesKeyword_11_0() { return cAttributesKeyword_11_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11_1() { return cLeftCurlyBracketKeyword_11_1; }
		
		//attribute+=ObjAttribute
		public Assignment getAttributeAssignment_11_2() { return cAttributeAssignment_11_2; }
		
		//ObjAttribute
		public RuleCall getAttributeObjAttributeParserRuleCall_11_2_0() { return cAttributeObjAttributeParserRuleCall_11_2_0; }
		
		//(',' attribute+=ObjAttribute)*
		public Group getGroup_11_3() { return cGroup_11_3; }
		
		//','
		public Keyword getCommaKeyword_11_3_0() { return cCommaKeyword_11_3_0; }
		
		//attribute+=ObjAttribute
		public Assignment getAttributeAssignment_11_3_1() { return cAttributeAssignment_11_3_1; }
		
		//ObjAttribute
		public RuleCall getAttributeObjAttributeParserRuleCall_11_3_1_0() { return cAttributeObjAttributeParserRuleCall_11_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11_4() { return cRightCurlyBracketKeyword_11_4; }
		
		//('rules' '{' rules+=Rule (',' rules+=Rule)* '}')?
		public Group getGroup_12() { return cGroup_12; }
		
		//'rules'
		public Keyword getRulesKeyword_12_0() { return cRulesKeyword_12_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12_1() { return cLeftCurlyBracketKeyword_12_1; }
		
		//rules+=Rule
		public Assignment getRulesAssignment_12_2() { return cRulesAssignment_12_2; }
		
		//Rule
		public RuleCall getRulesRuleParserRuleCall_12_2_0() { return cRulesRuleParserRuleCall_12_2_0; }
		
		//(',' rules+=Rule)*
		public Group getGroup_12_3() { return cGroup_12_3; }
		
		//','
		public Keyword getCommaKeyword_12_3_0() { return cCommaKeyword_12_3_0; }
		
		//rules+=Rule
		public Assignment getRulesAssignment_12_3_1() { return cRulesAssignment_12_3_1; }
		
		//Rule
		public RuleCall getRulesRuleParserRuleCall_12_3_1_0() { return cRulesRuleParserRuleCall_12_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12_4() { return cRightCurlyBracketKeyword_12_4; }
	}
	public class PosOrCameraElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.PosOrCamera");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cCameraKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final RuleCall cEDoubleParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//PosOrCamera returns ecore::EDoubleObject:
		//    'camera' | EDouble;
		@Override public ParserRule getRule() { return rule; }
		
		//'camera' | EDouble
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'camera'
		public Keyword getCameraKeyword_0() { return cCameraKeyword_0; }
		
		//EDouble
		public RuleCall getEDoubleParserRuleCall_1() { return cEDoubleParserRuleCall_1; }
	}
	public class PhysicChangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.PhysicChange");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cActionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cActionActionEnumRuleCall_1_0 = (RuleCall)cActionAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cInKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cClassAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cClassClassCrossReference_2_1_0 = (CrossReference)cClassAssignment_2_1.eContents().get(0);
		private final RuleCall cClassClassEStringParserRuleCall_2_1_0_1 = (RuleCall)cClassClassCrossReference_2_1_0.eContents().get(1);
		private final Keyword cNamedKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cObjectAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cObjectEStringParserRuleCall_4_0 = (RuleCall)cObjectAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cAtKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cPositionAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cPositionPositionEnumRuleCall_5_1_0 = (RuleCall)cPositionAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cScaleKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cScaleAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cScaleEDoubleParserRuleCall_6_1_0 = (RuleCall)cScaleAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cStatKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cAttributeAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cAttributeEStringParserRuleCall_7_1_0 = (RuleCall)cAttributeAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cChangeStatKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cChangeValueAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cChangeValueEIntParserRuleCall_8_1_0 = (RuleCall)cChangeValueAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cForceKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cForceAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final CrossReference cForceForceCrossReference_9_1_0 = (CrossReference)cForceAssignment_9_1.eContents().get(0);
		private final RuleCall cForceForceEStringParserRuleCall_9_1_0_1 = (RuleCall)cForceForceCrossReference_9_1_0.eContents().get(1);
		
		//PhysicChange returns PhysicChange:
		//    'do' action=Action
		//    (('in')? class=[Class|EString])?
		//    ('named')? object=EString
		//    ('at' position=Position)?
		//    ('scale' scale=EDouble)?
		//    ('stat' attribute=EString)?
		//    ('changeStat' changeValue=EInt)?
		//    ('force' force=[Force|EString])?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'do' action=Action
		//(('in')? class=[Class|EString])?
		//('named')? object=EString
		//('at' position=Position)?
		//('scale' scale=EDouble)?
		//('stat' attribute=EString)?
		//('changeStat' changeValue=EInt)?
		//('force' force=[Force|EString])?
		public Group getGroup() { return cGroup; }
		
		//'do'
		public Keyword getDoKeyword_0() { return cDoKeyword_0; }
		
		//action=Action
		public Assignment getActionAssignment_1() { return cActionAssignment_1; }
		
		//Action
		public RuleCall getActionActionEnumRuleCall_1_0() { return cActionActionEnumRuleCall_1_0; }
		
		//(('in')? class=[Class|EString])?
		public Group getGroup_2() { return cGroup_2; }
		
		//('in')?
		public Keyword getInKeyword_2_0() { return cInKeyword_2_0; }
		
		//class=[Class|EString]
		public Assignment getClassAssignment_2_1() { return cClassAssignment_2_1; }
		
		//[Class|EString]
		public CrossReference getClassClassCrossReference_2_1_0() { return cClassClassCrossReference_2_1_0; }
		
		//EString
		public RuleCall getClassClassEStringParserRuleCall_2_1_0_1() { return cClassClassEStringParserRuleCall_2_1_0_1; }
		
		//('named')?
		public Keyword getNamedKeyword_3() { return cNamedKeyword_3; }
		
		//object=EString
		public Assignment getObjectAssignment_4() { return cObjectAssignment_4; }
		
		//EString
		public RuleCall getObjectEStringParserRuleCall_4_0() { return cObjectEStringParserRuleCall_4_0; }
		
		//('at' position=Position)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'at'
		public Keyword getAtKeyword_5_0() { return cAtKeyword_5_0; }
		
		//position=Position
		public Assignment getPositionAssignment_5_1() { return cPositionAssignment_5_1; }
		
		//Position
		public RuleCall getPositionPositionEnumRuleCall_5_1_0() { return cPositionPositionEnumRuleCall_5_1_0; }
		
		//('scale' scale=EDouble)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'scale'
		public Keyword getScaleKeyword_6_0() { return cScaleKeyword_6_0; }
		
		//scale=EDouble
		public Assignment getScaleAssignment_6_1() { return cScaleAssignment_6_1; }
		
		//EDouble
		public RuleCall getScaleEDoubleParserRuleCall_6_1_0() { return cScaleEDoubleParserRuleCall_6_1_0; }
		
		//('stat' attribute=EString)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'stat'
		public Keyword getStatKeyword_7_0() { return cStatKeyword_7_0; }
		
		//attribute=EString
		public Assignment getAttributeAssignment_7_1() { return cAttributeAssignment_7_1; }
		
		//EString
		public RuleCall getAttributeEStringParserRuleCall_7_1_0() { return cAttributeEStringParserRuleCall_7_1_0; }
		
		//('changeStat' changeValue=EInt)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'changeStat'
		public Keyword getChangeStatKeyword_8_0() { return cChangeStatKeyword_8_0; }
		
		//changeValue=EInt
		public Assignment getChangeValueAssignment_8_1() { return cChangeValueAssignment_8_1; }
		
		//EInt
		public RuleCall getChangeValueEIntParserRuleCall_8_1_0() { return cChangeValueEIntParserRuleCall_8_1_0; }
		
		//('force' force=[Force|EString])?
		public Group getGroup_9() { return cGroup_9; }
		
		//'force'
		public Keyword getForceKeyword_9_0() { return cForceKeyword_9_0; }
		
		//force=[Force|EString]
		public Assignment getForceAssignment_9_1() { return cForceAssignment_9_1; }
		
		//[Force|EString]
		public CrossReference getForceForceCrossReference_9_1_0() { return cForceForceCrossReference_9_1_0; }
		
		//EString
		public RuleCall getForceForceEStringParserRuleCall_9_1_0_1() { return cForceForceEStringParserRuleCall_9_1_0_1; }
	}
	public class ObjAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.ObjAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAttributeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cAttributeAttributeCrossReference_0_0 = (CrossReference)cAttributeAssignment_0.eContents().get(0);
		private final RuleCall cAttributeAttributeEStringParserRuleCall_0_0_1 = (RuleCall)cAttributeAttributeCrossReference_0_0.eContents().get(1);
		private final Keyword cValueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueEStringParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//ObjAttribute returns ObjAttribute:
		//    attribute=[Attribute|EString] 'value' value=EString
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//attribute=[Attribute|EString] 'value' value=EString
		public Group getGroup() { return cGroup; }
		
		//attribute=[Attribute|EString]
		public Assignment getAttributeAssignment_0() { return cAttributeAssignment_0; }
		
		//[Attribute|EString]
		public CrossReference getAttributeAttributeCrossReference_0_0() { return cAttributeAttributeCrossReference_0_0; }
		
		//EString
		public RuleCall getAttributeAttributeEStringParserRuleCall_0_0_1() { return cAttributeAttributeEStringParserRuleCall_0_0_1; }
		
		//'value'
		public Keyword getValueKeyword_1() { return cValueKeyword_1; }
		
		//value=EString
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_2_0() { return cValueEStringParserRuleCall_2_0; }
	}
	public class RuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Rule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cActionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cActionTriggerCrossReference_1_0 = (CrossReference)cActionAssignment_1.eContents().get(0);
		private final RuleCall cActionTriggerEStringParserRuleCall_1_0_1 = (RuleCall)cActionTriggerCrossReference_1_0.eContents().get(1);
		private final Keyword cIfKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cConditionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cConditionConditionParserRuleCall_3_0 = (RuleCall)cConditionAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Rule returns Rule:
		//    'do' action=[Trigger|EString] 'if(' condition=Condition ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'do' action=[Trigger|EString] 'if(' condition=Condition ')'
		public Group getGroup() { return cGroup; }
		
		//'do'
		public Keyword getDoKeyword_0() { return cDoKeyword_0; }
		
		//action=[Trigger|EString]
		public Assignment getActionAssignment_1() { return cActionAssignment_1; }
		
		//[Trigger|EString]
		public CrossReference getActionTriggerCrossReference_1_0() { return cActionTriggerCrossReference_1_0; }
		
		//EString
		public RuleCall getActionTriggerEStringParserRuleCall_1_0_1() { return cActionTriggerEStringParserRuleCall_1_0_1; }
		
		//'if('
		public Keyword getIfKeyword_2() { return cIfKeyword_2; }
		
		//condition=Condition
		public Assignment getConditionAssignment_3() { return cConditionAssignment_3; }
		
		//Condition
		public RuleCall getConditionConditionParserRuleCall_3_0() { return cConditionConditionParserRuleCall_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class NotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Not");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExclamationMarkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLeftAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLeftConditionParserRuleCall_1_0 = (RuleCall)cLeftAssignment_1.eContents().get(0);
		
		//Not returns Not:
		//    '!' left=Condition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'!' left=Condition
		public Group getGroup() { return cGroup; }
		
		//'!'
		public Keyword getExclamationMarkKeyword_0() { return cExclamationMarkKeyword_0; }
		
		//left=Condition
		public Assignment getLeftAssignment_1() { return cLeftAssignment_1; }
		
		//Condition
		public RuleCall getLeftConditionParserRuleCall_1_0() { return cLeftConditionParserRuleCall_1_0; }
	}
	public class BinaryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Binary");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLeftAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLeftConditionParserRuleCall_1_0 = (RuleCall)cLeftAssignment_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOpAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOpLogicOpsEnumRuleCall_3_0 = (RuleCall)cOpAssignment_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRightAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cRightConditionParserRuleCall_5_0 = (RuleCall)cRightAssignment_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Binary returns Binary:
		//    '(' left=Condition ')' op=LogicOps '(' right=Condition ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'(' left=Condition ')' op=LogicOps '(' right=Condition ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//left=Condition
		public Assignment getLeftAssignment_1() { return cLeftAssignment_1; }
		
		//Condition
		public RuleCall getLeftConditionParserRuleCall_1_0() { return cLeftConditionParserRuleCall_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
		
		//op=LogicOps
		public Assignment getOpAssignment_3() { return cOpAssignment_3; }
		
		//LogicOps
		public RuleCall getOpLogicOpsEnumRuleCall_3_0() { return cOpLogicOpsEnumRuleCall_3_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }
		
		//right=Condition
		public Assignment getRightAssignment_5() { return cRightAssignment_5; }
		
		//Condition
		public RuleCall getRightConditionParserRuleCall_5_0() { return cRightConditionParserRuleCall_5_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class ArithmeticElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Arithmetic");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLeftAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cLeftValueParserRuleCall_0_0 = (RuleCall)cLeftAssignment_0.eContents().get(0);
		private final Assignment cOpAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOpArithmOpsEnumRuleCall_1_0 = (RuleCall)cOpAssignment_1.eContents().get(0);
		private final Assignment cRightAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRightValueParserRuleCall_2_0 = (RuleCall)cRightAssignment_2.eContents().get(0);
		
		//Arithmetic returns Arithmetic:
		//    left=Value op=ArithmOps right=Value
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//left=Value op=ArithmOps right=Value
		public Group getGroup() { return cGroup; }
		
		//left=Value
		public Assignment getLeftAssignment_0() { return cLeftAssignment_0; }
		
		//Value
		public RuleCall getLeftValueParserRuleCall_0_0() { return cLeftValueParserRuleCall_0_0; }
		
		//op=ArithmOps
		public Assignment getOpAssignment_1() { return cOpAssignment_1; }
		
		//ArithmOps
		public RuleCall getOpArithmOpsEnumRuleCall_1_0() { return cOpArithmOpsEnumRuleCall_1_0; }
		
		//right=Value
		public Assignment getRightAssignment_2() { return cRightAssignment_2; }
		
		//Value
		public RuleCall getRightValueParserRuleCall_2_0() { return cRightValueParserRuleCall_2_0; }
	}
	public class AttributeValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.AttributeValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cClassAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cClassEStringParserRuleCall_0_0 = (RuleCall)cClassAssignment_0.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAttributeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAttributeEStringParserRuleCall_2_0 = (RuleCall)cAttributeAssignment_2.eContents().get(0);
		
		//AttributeValue returns AttributeValue:
		//    class=EString '.' attribute=EString
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//class=EString '.' attribute=EString
		public Group getGroup() { return cGroup; }
		
		//class=EString
		public Assignment getClassAssignment_0() { return cClassAssignment_0; }
		
		//EString
		public RuleCall getClassEStringParserRuleCall_0_0() { return cClassEStringParserRuleCall_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//attribute=EString
		public Assignment getAttributeAssignment_2() { return cAttributeAssignment_2; }
		
		//EString
		public RuleCall getAttributeEStringParserRuleCall_2_0() { return cAttributeEStringParserRuleCall_2_0; }
	}
	public class ConstantValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.ConstantValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueConstantParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//ConstantValue returns ConstantValue:
		//    value=Constant
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value=Constant
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//Constant
		public RuleCall getValueConstantParserRuleCall_0() { return cValueConstantParserRuleCall_0; }
	}
	public class ConstantElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Constant");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEIntParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEStringParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Constant returns ecore::EString:
		//    EInt | EString
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//EInt | EString
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EInt
		public RuleCall getEIntParserRuleCall_0() { return cEIntParserRuleCall_0; }
		
		//EString
		public RuleCall getEStringParserRuleCall_1() { return cEStringParserRuleCall_1; }
	}
	public class AllInstancesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.AllInstances");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeEStringParserRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		
		//AllInstances returns AllInstances:
		//    "Number" type=EString
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//"Number" type=EString
		public Group getGroup() { return cGroup; }
		
		//"Number"
		public Keyword getNumberKeyword_0() { return cNumberKeyword_0; }
		
		//type=EString
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_1_0() { return cTypeEStringParserRuleCall_1_0; }
	}
	
	public class GestureElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Gesture");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDragEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDragDragKeyword_0_0 = (Keyword)cDragEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTiltEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTiltTiltKeyword_1_0 = (Keyword)cTiltEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cTouchEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cTouchTouchKeyword_2_0 = (Keyword)cTouchEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Gesture returns Gesture:
		//    drag="drag" | tilt="tilt" | touch="touch"
		//;
		public EnumRule getRule() { return rule; }
		
		//drag="drag" | tilt="tilt" | touch="touch"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//drag="drag"
		public EnumLiteralDeclaration getDragEnumLiteralDeclaration_0() { return cDragEnumLiteralDeclaration_0; }
		
		//"drag"
		public Keyword getDragDragKeyword_0_0() { return cDragDragKeyword_0_0; }
		
		//tilt="tilt"
		public EnumLiteralDeclaration getTiltEnumLiteralDeclaration_1() { return cTiltEnumLiteralDeclaration_1; }
		
		//"tilt"
		public Keyword getTiltTiltKeyword_1_0() { return cTiltTiltKeyword_1_0; }
		
		//touch="touch"
		public EnumLiteralDeclaration getTouchEnumLiteralDeclaration_2() { return cTouchEnumLiteralDeclaration_2; }
		
		//"touch"
		public Keyword getTouchTouchKeyword_2_0() { return cTouchTouchKeyword_2_0; }
	}
	public class PlanesElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Planes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAnyEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAnyAnyKeyword_0_0 = (Keyword)cAnyEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cHorizontalEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cHorizontalHorizontalKeyword_1_0 = (Keyword)cHorizontalEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cVerticalEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cVerticalVerticalKeyword_2_0 = (Keyword)cVerticalEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Planes returns Planes:
		//                any = 'any' | horizontal = 'horizontal' | vertical = 'vertical';
		public EnumRule getRule() { return rule; }
		
		//any = 'any' | horizontal = 'horizontal' | vertical = 'vertical'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//any = 'any'
		public EnumLiteralDeclaration getAnyEnumLiteralDeclaration_0() { return cAnyEnumLiteralDeclaration_0; }
		
		//'any'
		public Keyword getAnyAnyKeyword_0_0() { return cAnyAnyKeyword_0_0; }
		
		//horizontal = 'horizontal'
		public EnumLiteralDeclaration getHorizontalEnumLiteralDeclaration_1() { return cHorizontalEnumLiteralDeclaration_1; }
		
		//'horizontal'
		public Keyword getHorizontalHorizontalKeyword_1_0() { return cHorizontalHorizontalKeyword_1_0; }
		
		//vertical = 'vertical'
		public EnumLiteralDeclaration getVerticalEnumLiteralDeclaration_2() { return cVerticalEnumLiteralDeclaration_2; }
		
		//'vertical'
		public Keyword getVerticalVerticalKeyword_2_0() { return cVerticalVerticalKeyword_2_0; }
	}
	public class BodyTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.BodyType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cStaticEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cStaticStaticKeyword_0_0 = (Keyword)cStaticEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDynamicEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDynamicDynamicKeyword_1_0 = (Keyword)cDynamicEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cKinematicEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cKinematicKinematicKeyword_2_0 = (Keyword)cKinematicEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum BodyType returns BodyType:
		//                static = 'static' | dynamic = 'dynamic' | kinematic = 'kinematic';
		public EnumRule getRule() { return rule; }
		
		//static = 'static' | dynamic = 'dynamic' | kinematic = 'kinematic'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//static = 'static'
		public EnumLiteralDeclaration getStaticEnumLiteralDeclaration_0() { return cStaticEnumLiteralDeclaration_0; }
		
		//'static'
		public Keyword getStaticStaticKeyword_0_0() { return cStaticStaticKeyword_0_0; }
		
		//dynamic = 'dynamic'
		public EnumLiteralDeclaration getDynamicEnumLiteralDeclaration_1() { return cDynamicEnumLiteralDeclaration_1; }
		
		//'dynamic'
		public Keyword getDynamicDynamicKeyword_1_0() { return cDynamicDynamicKeyword_1_0; }
		
		//kinematic = 'kinematic'
		public EnumLiteralDeclaration getKinematicEnumLiteralDeclaration_2() { return cKinematicEnumLiteralDeclaration_2; }
		
		//'kinematic'
		public Keyword getKinematicKinematicKeyword_2_0() { return cKinematicKinematicKeyword_2_0; }
	}
	public class BasicActionsElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.BasicActions");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cStartEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cStartStartKeyword_0_0 = (Keyword)cStartEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cWinEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cWinWinKeyword_1_0 = (Keyword)cWinEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cLoseEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cLoseLoseKeyword_2_0 = (Keyword)cLoseEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cNoneEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cNoneNoneKeyword_3_0 = (Keyword)cNoneEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cRestartEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cRestartRestartKeyword_4_0 = (Keyword)cRestartEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum BasicActions returns BasicActions:
		//                start = 'start' | win = 'win' | lose = 'lose' | none = 'none' | restart = 'restart' ;
		public EnumRule getRule() { return rule; }
		
		//start = 'start' | win = 'win' | lose = 'lose' | none = 'none' | restart = 'restart'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//start = 'start'
		public EnumLiteralDeclaration getStartEnumLiteralDeclaration_0() { return cStartEnumLiteralDeclaration_0; }
		
		//'start'
		public Keyword getStartStartKeyword_0_0() { return cStartStartKeyword_0_0; }
		
		//win = 'win'
		public EnumLiteralDeclaration getWinEnumLiteralDeclaration_1() { return cWinEnumLiteralDeclaration_1; }
		
		//'win'
		public Keyword getWinWinKeyword_1_0() { return cWinWinKeyword_1_0; }
		
		//lose = 'lose'
		public EnumLiteralDeclaration getLoseEnumLiteralDeclaration_2() { return cLoseEnumLiteralDeclaration_2; }
		
		//'lose'
		public Keyword getLoseLoseKeyword_2_0() { return cLoseLoseKeyword_2_0; }
		
		//none = 'none'
		public EnumLiteralDeclaration getNoneEnumLiteralDeclaration_3() { return cNoneEnumLiteralDeclaration_3; }
		
		//'none'
		public Keyword getNoneNoneKeyword_3_0() { return cNoneNoneKeyword_3_0; }
		
		//restart = 'restart'
		public EnumLiteralDeclaration getRestartEnumLiteralDeclaration_4() { return cRestartEnumLiteralDeclaration_4; }
		
		//'restart'
		public Keyword getRestartRestartKeyword_4_0() { return cRestartRestartKeyword_4_0; }
	}
	public class ActionElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Action");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCreateEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCreateCreateKeyword_0_0 = (Keyword)cCreateEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cEditEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cEditEditKeyword_1_0 = (Keyword)cEditEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDeleteEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDeleteDeleteKeyword_2_0 = (Keyword)cDeleteEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Action returns Action:
		//                create = 'create' | edit = 'edit' | delete = 'delete';
		public EnumRule getRule() { return rule; }
		
		//create = 'create' | edit = 'edit' | delete = 'delete'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//create = 'create'
		public EnumLiteralDeclaration getCreateEnumLiteralDeclaration_0() { return cCreateEnumLiteralDeclaration_0; }
		
		//'create'
		public Keyword getCreateCreateKeyword_0_0() { return cCreateCreateKeyword_0_0; }
		
		//edit = 'edit'
		public EnumLiteralDeclaration getEditEnumLiteralDeclaration_1() { return cEditEnumLiteralDeclaration_1; }
		
		//'edit'
		public Keyword getEditEditKeyword_1_0() { return cEditEditKeyword_1_0; }
		
		//delete = 'delete'
		public EnumLiteralDeclaration getDeleteEnumLiteralDeclaration_2() { return cDeleteEnumLiteralDeclaration_2; }
		
		//'delete'
		public Keyword getDeleteDeleteKeyword_2_0() { return cDeleteDeleteKeyword_2_0; }
	}
	public class PositionElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.Position");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cFrontEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cFrontFrontKeyword_0_0 = (Keyword)cFrontEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDefaultEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDefaultDefaultKeyword_1_0 = (Keyword)cDefaultEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBackEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBackBackKeyword_2_0 = (Keyword)cBackEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Position returns Position:
		//                front = 'front' | default = 'default' | back = 'back';
		public EnumRule getRule() { return rule; }
		
		//front = 'front' | default = 'default' | back = 'back'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//front = 'front'
		public EnumLiteralDeclaration getFrontEnumLiteralDeclaration_0() { return cFrontEnumLiteralDeclaration_0; }
		
		//'front'
		public Keyword getFrontFrontKeyword_0_0() { return cFrontFrontKeyword_0_0; }
		
		//default = 'default'
		public EnumLiteralDeclaration getDefaultEnumLiteralDeclaration_1() { return cDefaultEnumLiteralDeclaration_1; }
		
		//'default'
		public Keyword getDefaultDefaultKeyword_1_0() { return cDefaultDefaultKeyword_1_0; }
		
		//back = 'back'
		public EnumLiteralDeclaration getBackEnumLiteralDeclaration_2() { return cBackEnumLiteralDeclaration_2; }
		
		//'back'
		public Keyword getBackBackKeyword_2_0() { return cBackBackKeyword_2_0; }
	}
	public class LogicOpsElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.LogicOps");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAndEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAndAmpersandKeyword_0_0 = (Keyword)cAndEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOrEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOrVerticalLineKeyword_1_0 = (Keyword)cOrEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum LogicOps returns LogicOps:
		//    And='&' | Or='|' ;
		public EnumRule getRule() { return rule; }
		
		//And='&' | Or='|'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//And='&'
		public EnumLiteralDeclaration getAndEnumLiteralDeclaration_0() { return cAndEnumLiteralDeclaration_0; }
		
		//'&'
		public Keyword getAndAmpersandKeyword_0_0() { return cAndAmpersandKeyword_0_0; }
		
		//Or='|'
		public EnumLiteralDeclaration getOrEnumLiteralDeclaration_1() { return cOrEnumLiteralDeclaration_1; }
		
		//'|'
		public Keyword getOrVerticalLineKeyword_1_0() { return cOrVerticalLineKeyword_1_0; }
	}
	public class ArithmOpsElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "arg.Arg.ArithmOps");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEqualEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEqualEqualsSignKeyword_0_0 = (Keyword)cEqualEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cGreaterEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cGreaterGreaterThanSignKeyword_1_0 = (Keyword)cGreaterEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cGreaterEqualEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cGreaterEqualGreaterThanSignEqualsSignKeyword_2_0 = (Keyword)cGreaterEqualEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cLowerEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cLowerLessThanSignKeyword_3_0 = (Keyword)cLowerEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cLowerEqualEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cLowerEqualLessThanSignEqualsSignKeyword_4_0 = (Keyword)cLowerEqualEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum ArithmOps returns ArithmOps:
		//    equal='=' | greater='>' | greaterEqual='>=' | lower='<' | lowerEqual='<='
		//;
		public EnumRule getRule() { return rule; }
		
		//equal='=' | greater='>' | greaterEqual='>=' | lower='<' | lowerEqual='<='
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//equal='='
		public EnumLiteralDeclaration getEqualEnumLiteralDeclaration_0() { return cEqualEnumLiteralDeclaration_0; }
		
		//'='
		public Keyword getEqualEqualsSignKeyword_0_0() { return cEqualEqualsSignKeyword_0_0; }
		
		//greater='>'
		public EnumLiteralDeclaration getGreaterEnumLiteralDeclaration_1() { return cGreaterEnumLiteralDeclaration_1; }
		
		//'>'
		public Keyword getGreaterGreaterThanSignKeyword_1_0() { return cGreaterGreaterThanSignKeyword_1_0; }
		
		//greaterEqual='>='
		public EnumLiteralDeclaration getGreaterEqualEnumLiteralDeclaration_2() { return cGreaterEqualEnumLiteralDeclaration_2; }
		
		//'>='
		public Keyword getGreaterEqualGreaterThanSignEqualsSignKeyword_2_0() { return cGreaterEqualGreaterThanSignEqualsSignKeyword_2_0; }
		
		//lower='<'
		public EnumLiteralDeclaration getLowerEnumLiteralDeclaration_3() { return cLowerEnumLiteralDeclaration_3; }
		
		//'<'
		public Keyword getLowerLessThanSignKeyword_3_0() { return cLowerLessThanSignKeyword_3_0; }
		
		//lowerEqual='<='
		public EnumLiteralDeclaration getLowerEqualEnumLiteralDeclaration_4() { return cLowerEqualEnumLiteralDeclaration_4; }
		
		//'<='
		public Keyword getLowerEqualLessThanSignEqualsSignKeyword_4_0() { return cLowerEqualLessThanSignEqualsSignKeyword_4_0; }
	}
	
	private final OntologicalElements pOntological;
	private final ConditionElements pCondition;
	private final ValueElements pValue;
	private final GestureElements eGesture;
	private final EStringElements pEString;
	private final ClassElements pClass;
	private final GraphicElements pGraphic;
	private final PhysicElements pPhysic;
	private final GameElements pGame;
	private final EBooleanElements pEBoolean;
	private final AttributeElements pAttribute;
	private final AttributeMaxElements pAttributeMax;
	private final ReferenceElements pReference;
	private final EIntElements pEInt;
	private final GraphicClassElements pGraphicClass;
	private final ConstraintsElements pConstraints;
	private final ConnectionElements pConnection;
	private final VersionsElements pVersions;
	private final PlanesElements ePlanes;
	private final EDoubleElements pEDouble;
	private final PhysicClassElements pPhysicClass;
	private final PhysicBodyElements pPhysicBody;
	private final BitMasksElements pBitMasks;
	private final ForceElements pForce;
	private final BodyTypeElements eBodyType;
	private final GamePadElements pGamePad;
	private final ScoreSystemElements pScoreSystem;
	private final NoLimitElements pNoLimit;
	private final TriggerElements pTrigger;
	private final CollisionElements pCollision;
	private final ObjInitElements pObjInit;
	private final PosOrCameraElements pPosOrCamera;
	private final PhysicChangeElements pPhysicChange;
	private final BasicActionsElements eBasicActions;
	private final ActionElements eAction;
	private final PositionElements ePosition;
	private final ObjAttributeElements pObjAttribute;
	private final RuleElements pRule;
	private final NotElements pNot;
	private final BinaryElements pBinary;
	private final ArithmeticElements pArithmetic;
	private final LogicOpsElements eLogicOps;
	private final ArithmOpsElements eArithmOps;
	private final AttributeValueElements pAttributeValue;
	private final ConstantValueElements pConstantValue;
	private final ConstantElements pConstant;
	private final AllInstancesElements pAllInstances;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ArgGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pOntological = new OntologicalElements();
		this.pCondition = new ConditionElements();
		this.pValue = new ValueElements();
		this.eGesture = new GestureElements();
		this.pEString = new EStringElements();
		this.pClass = new ClassElements();
		this.pGraphic = new GraphicElements();
		this.pPhysic = new PhysicElements();
		this.pGame = new GameElements();
		this.pEBoolean = new EBooleanElements();
		this.pAttribute = new AttributeElements();
		this.pAttributeMax = new AttributeMaxElements();
		this.pReference = new ReferenceElements();
		this.pEInt = new EIntElements();
		this.pGraphicClass = new GraphicClassElements();
		this.pConstraints = new ConstraintsElements();
		this.pConnection = new ConnectionElements();
		this.pVersions = new VersionsElements();
		this.ePlanes = new PlanesElements();
		this.pEDouble = new EDoubleElements();
		this.pPhysicClass = new PhysicClassElements();
		this.pPhysicBody = new PhysicBodyElements();
		this.pBitMasks = new BitMasksElements();
		this.pForce = new ForceElements();
		this.eBodyType = new BodyTypeElements();
		this.pGamePad = new GamePadElements();
		this.pScoreSystem = new ScoreSystemElements();
		this.pNoLimit = new NoLimitElements();
		this.pTrigger = new TriggerElements();
		this.pCollision = new CollisionElements();
		this.pObjInit = new ObjInitElements();
		this.pPosOrCamera = new PosOrCameraElements();
		this.pPhysicChange = new PhysicChangeElements();
		this.eBasicActions = new BasicActionsElements();
		this.eAction = new ActionElements();
		this.ePosition = new PositionElements();
		this.pObjAttribute = new ObjAttributeElements();
		this.pRule = new RuleElements();
		this.pNot = new NotElements();
		this.pBinary = new BinaryElements();
		this.pArithmetic = new ArithmeticElements();
		this.eLogicOps = new LogicOpsElements();
		this.eArithmOps = new ArithmOpsElements();
		this.pAttributeValue = new AttributeValueElements();
		this.pConstantValue = new ConstantValueElements();
		this.pConstant = new ConstantElements();
		this.pAllInstances = new AllInstancesElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("arg.Arg".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Ontological returns Ontological:
	//    'Game'
	//    name=EString
	//    '{'
	//        'elements' '{' classes+=Class ( classes+=Class)* '}'
	//    '}'
	//    graphic=Graphic
	//    physic=Physic
	//    game=Game;
	public OntologicalElements getOntologicalAccess() {
		return pOntological;
	}
	
	public ParserRule getOntologicalRule() {
		return getOntologicalAccess().getRule();
	}
	
	//Condition returns Condition:
	//    Not | Binary | Arithmetic;
	public ConditionElements getConditionAccess() {
		return pCondition;
	}
	
	public ParserRule getConditionRule() {
		return getConditionAccess().getRule();
	}
	
	//Value returns Value:
	//    AttributeValue | ConstantValue | AllInstances;
	public ValueElements getValueAccess() {
		return pValue;
	}
	
	public ParserRule getValueRule() {
		return getValueAccess().getRule();
	}
	
	//enum Gesture returns Gesture:
	//    drag="drag" | tilt="tilt" | touch="touch"
	//;
	public GestureElements getGestureAccess() {
		return eGesture;
	}
	
	public EnumRule getGestureRule() {
		return getGestureAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Class returns Class:
	//    name=EString
	//    '{'
	//        (attributes+=Attribute ( attributes+=Attribute)*)?
	//        ('dependences' '{' references+=Reference ( references+=Reference)* '}' )?
	//    '}'
	//    (abstract?='abstract')?
	//    (noSCN?='invisible')?;
	public ClassElements getClassAccess() {
		return pClass;
	}
	
	public ParserRule getClassRule() {
		return getClassAccess().getRule();
	}
	
	//Graphic returns Graphic:
	//    'Graphic''{'
	//    classes+=GraphicClass ( classes+=GraphicClass)*
	//    '}'
	//;
	public GraphicElements getGraphicAccess() {
		return pGraphic;
	}
	
	public ParserRule getGraphicRule() {
		return getGraphicAccess().getRule();
	}
	
	//Physic returns Physic:
	//    'Physics''{'
	//    classes+=PhysicClass ( classes+=PhysicClass)*
	//    '}'
	//;
	public PhysicElements getPhysicAccess() {
		return pPhysic;
	}
	
	public ParserRule getPhysicRule() {
		return getPhysicAccess().getRule();
	}
	
	//Game returns Game:
	//    'Gamelogic''{'
	//    'Display''{'
	//    'start' start=EString
	//    'win' win=EString
	//    'lose' lose=EString
	//    'score' '{' score=ScoreSystem '}'
	//    '}'
	//    ('Actions' '{' actionsTriggers+=Trigger ( actionsTriggers+=Trigger)* '}')?
	//    ('Collisions' '{' collisions+=Collision ( collisions+=Collision)* '}')?
	//    ('Buttons' '{' gamepad+=GamePad ( gamepad+=GamePad)* '}')?
	//    ('Elements' '{' objInit+=ObjInit ( objInit+=ObjInit)* '}')?
	//    '}'
	//;
	public GameElements getGameAccess() {
		return pGame;
	}
	
	public ParserRule getGameRule() {
		return getGameAccess().getRule();
	}
	
	//EBoolean returns ecore::EBoolean:
	//    'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//Attribute returns Attribute:
	//    name=EString ':' type=EString '[' min=EInt '..' max=AttributeMax ']' '=' default=Constant
	//    (isParam?='isParam')?
	//    (isKey?='isKey')?
	//    (readOnly?='readOnly')?;
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//AttributeMax returns ecore::EIntegerObject:
	//    '*' | INT;
	public AttributeMaxElements getAttributeMaxAccess() {
		return pAttributeMax;
	}
	
	public ParserRule getAttributeMaxRule() {
		return getAttributeMaxAccess().getRule();
	}
	
	//Reference returns Reference:
	//    name=EString
	//        ('containtment' containtment=EString)?
	//        'min' min=EInt
	//        'max' max=EInt
	//        'target' target=EString
	//        ('opposite' opposite=EString)?;
	public ReferenceElements getReferenceAccess() {
		return pReference;
	}
	
	public ParserRule getReferenceRule() {
		return getReferenceAccess().getRule();
	}
	
	//EInt returns ecore::EInt:
	//    '-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//GraphicClass returns GraphicClass:
	//    'element' ontoClass=[Class|EString]
	//    'versions' '{' versions+=Versions ( versions+=Versions)* '}'
	//    'constraints' '{' constraints=Constraints '}'
	//;
	public GraphicClassElements getGraphicClassAccess() {
		return pGraphicClass;
	}
	
	public ParserRule getGraphicClassRule() {
		return getGraphicClassAccess().getRule();
	}
	
	//Constraints returns Constraints:
	//    'plane' planes=Planes
	//    overlapping?='overlaps'
	//    'sizeMin' sizeMin=EDouble
	//    'sizeMax' sizeMax=EDouble
	//    'xVariation' xToOriginPos=EDouble
	//    'yVariation' yToOriginPos=EDouble
	//    'zVariation' zToOriginPos=EDouble
	//    'rotation' rotation=EInt
	//;
	public ConstraintsElements getConstraintsAccess() {
		return pConstraints;
	}
	
	public ParserRule getConstraintsRule() {
		return getConstraintsAccess().getRule();
	}
	
	//Connection returns Connection:
	//    'Connection'
	//    name=EString
	//    '{'
	//        'type' type=EString
	//        'color' color=EString
	//        'textColor' textColor=EString
	//        'decorator' decorator=EString
	//        'decoratorPos' decoratorPos=EString
	//        'pattern' pattern=EString
	//        'width' width=EDouble
	//        'position' position=EString
	//    '}';
	public ConnectionElements getConnectionAccess() {
		return pConnection;
	}
	
	public ParserRule getConnectionRule() {
		return getConnectionAccess().getRule();
	}
	
	//Versions returns Versions:
	//    name=EString '=' URL=EString;
	public VersionsElements getVersionsAccess() {
		return pVersions;
	}
	
	public ParserRule getVersionsRule() {
		return getVersionsAccess().getRule();
	}
	
	//enum Planes returns Planes:
	//                any = 'any' | horizontal = 'horizontal' | vertical = 'vertical';
	public PlanesElements getPlanesAccess() {
		return ePlanes;
	}
	
	public EnumRule getPlanesRule() {
		return getPlanesAccess().getRule();
	}
	
	//EDouble returns ecore::EDouble:
	//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
	public EDoubleElements getEDoubleAccess() {
		return pEDouble;
	}
	
	public ParserRule getEDoubleRule() {
		return getEDoubleAccess().getRule();
	}
	
	//PhysicClass returns PhysicClass:
	//    'element' ontoClass=[Class|EString]
	//    'body' '{' physicBody=PhysicBody '}'
	//    ('forces' '{' forces+=Force ( forces+=Force)* '}')?
	//    ('contacts' '{' bitMasks=BitMasks '}')?
	//;
	public PhysicClassElements getPhysicClassAccess() {
		return pPhysicClass;
	}
	
	public ParserRule getPhysicClassRule() {
		return getPhysicClassAccess().getRule();
	}
	
	//PhysicBody returns PhysicBody:
	//    'mass' mass=EDouble
	//    'bodyType' bodyType=BodyType
	//    'charge' charge=EDouble
	//    'friction' friction=EDouble
	//    'rollingFriction' rollingFriction=EDouble
	//    'restitution' restitution=EDouble
	//    'damping' damping=EDouble
	//    'angularDamping' angularDamping=EDouble
	//;
	public PhysicBodyElements getPhysicBodyAccess() {
		return pPhysicBody;
	}
	
	public ParserRule getPhysicBodyRule() {
		return getPhysicBodyAccess().getRule();
	}
	
	//BitMasks returns BitMasks:
	//    'collision' collision+=[Class|EString] ( collision+=[Class|EString])*
	//    'contact' contact+=[Class|EString] ( contact+=[Class|EString])*
	//;
	public BitMasksElements getBitMasksAccess() {
		return pBitMasks;
	}
	
	public ParserRule getBitMasksRule() {
		return getBitMasksAccess().getRule();
	}
	
	//Force returns Force:
	//    name=EString ':' 'gesture' gesture=Gesture
	//    ('[' xVector=EDouble ',' yVector=EDouble ',' zVector=EDouble ']')?
	//;
	public ForceElements getForceAccess() {
		return pForce;
	}
	
	public ParserRule getForceRule() {
		return getForceAccess().getRule();
	}
	
	//enum BodyType returns BodyType:
	//                static = 'static' | dynamic = 'dynamic' | kinematic = 'kinematic';
	public BodyTypeElements getBodyTypeAccess() {
		return eBodyType;
	}
	
	public EnumRule getBodyTypeRule() {
		return getBodyTypeAccess().getRule();
	}
	
	//GamePad returns GamePad:
	//    name=EString '->' trigger=[Trigger|EString]
	//;
	public GamePadElements getGamePadAccess() {
		return pGamePad;
	}
	
	public ParserRule getGamePadRule() {
		return getGamePadAccess().getRule();
	}
	
	//ScoreSystem returns ScoreSystem:
	//    'start' start=EInt
	//    'finish' finish=NoLimit
	//    'lives' lives=EInt
	//;
	public ScoreSystemElements getScoreSystemAccess() {
		return pScoreSystem;
	}
	
	public ParserRule getScoreSystemRule() {
		return getScoreSystemAccess().getRule();
	}
	
	//NoLimit returns ecore::EIntegerObject:
	//    '*' | INT;
	public NoLimitElements getNoLimitAccess() {
		return pNoLimit;
	}
	
	public ParserRule getNoLimitRule() {
		return getNoLimitAccess().getRule();
	}
	
	//Trigger returns Trigger:
	//    name=EString '{'
	//    ('action' action=BasicActions)?
	//    ('message' message=EString)?
	//    ('score' scoreChange=EInt)?
	//    ('timeEach' timeTrigger=EInt)?
	//    ('changes' '{' physicChanges+=PhysicChange ( physicChanges+=PhysicChange)* '}' )?
	//    '}'
	//;
	public TriggerElements getTriggerAccess() {
		return pTrigger;
	}
	
	public ParserRule getTriggerRule() {
		return getTriggerAccess().getRule();
	}
	
	//Collision returns Collision:
	//    'element' classA=[Class|EString]'to' classB=[Class|EString] '->' action=[Trigger|EString]
	//;
	public CollisionElements getCollisionAccess() {
		return pCollision;
	}
	
	public ParserRule getCollisionRule() {
		return getCollisionAccess().getRule();
	}
	
	//ObjInit returns ObjInit:
	//    name=EString ':' class=[Class|EString] '[' posX=PosOrCamera ',' posY=PosOrCamera ',' posZ=PosOrCamera (',' rotation=EInt)? ']'
	//    ('attributes' '{' attribute+=ObjAttribute (',' attribute+=ObjAttribute)* '}')?
	//    ('rules' '{' rules+=Rule (',' rules+=Rule)* '}')?
	//;
	public ObjInitElements getObjInitAccess() {
		return pObjInit;
	}
	
	public ParserRule getObjInitRule() {
		return getObjInitAccess().getRule();
	}
	
	//PosOrCamera returns ecore::EDoubleObject:
	//    'camera' | EDouble;
	public PosOrCameraElements getPosOrCameraAccess() {
		return pPosOrCamera;
	}
	
	public ParserRule getPosOrCameraRule() {
		return getPosOrCameraAccess().getRule();
	}
	
	//PhysicChange returns PhysicChange:
	//    'do' action=Action
	//    (('in')? class=[Class|EString])?
	//    ('named')? object=EString
	//    ('at' position=Position)?
	//    ('scale' scale=EDouble)?
	//    ('stat' attribute=EString)?
	//    ('changeStat' changeValue=EInt)?
	//    ('force' force=[Force|EString])?
	//;
	public PhysicChangeElements getPhysicChangeAccess() {
		return pPhysicChange;
	}
	
	public ParserRule getPhysicChangeRule() {
		return getPhysicChangeAccess().getRule();
	}
	
	//enum BasicActions returns BasicActions:
	//                start = 'start' | win = 'win' | lose = 'lose' | none = 'none' | restart = 'restart' ;
	public BasicActionsElements getBasicActionsAccess() {
		return eBasicActions;
	}
	
	public EnumRule getBasicActionsRule() {
		return getBasicActionsAccess().getRule();
	}
	
	//enum Action returns Action:
	//                create = 'create' | edit = 'edit' | delete = 'delete';
	public ActionElements getActionAccess() {
		return eAction;
	}
	
	public EnumRule getActionRule() {
		return getActionAccess().getRule();
	}
	
	//enum Position returns Position:
	//                front = 'front' | default = 'default' | back = 'back';
	public PositionElements getPositionAccess() {
		return ePosition;
	}
	
	public EnumRule getPositionRule() {
		return getPositionAccess().getRule();
	}
	
	//ObjAttribute returns ObjAttribute:
	//    attribute=[Attribute|EString] 'value' value=EString
	//;
	public ObjAttributeElements getObjAttributeAccess() {
		return pObjAttribute;
	}
	
	public ParserRule getObjAttributeRule() {
		return getObjAttributeAccess().getRule();
	}
	
	//Rule returns Rule:
	//    'do' action=[Trigger|EString] 'if(' condition=Condition ')'
	//;
	public RuleElements getRuleAccess() {
		return pRule;
	}
	
	public ParserRule getRuleRule() {
		return getRuleAccess().getRule();
	}
	
	//Not returns Not:
	//    '!' left=Condition
	//;
	public NotElements getNotAccess() {
		return pNot;
	}
	
	public ParserRule getNotRule() {
		return getNotAccess().getRule();
	}
	
	//Binary returns Binary:
	//    '(' left=Condition ')' op=LogicOps '(' right=Condition ')'
	//;
	public BinaryElements getBinaryAccess() {
		return pBinary;
	}
	
	public ParserRule getBinaryRule() {
		return getBinaryAccess().getRule();
	}
	
	//Arithmetic returns Arithmetic:
	//    left=Value op=ArithmOps right=Value
	//;
	public ArithmeticElements getArithmeticAccess() {
		return pArithmetic;
	}
	
	public ParserRule getArithmeticRule() {
		return getArithmeticAccess().getRule();
	}
	
	//enum LogicOps returns LogicOps:
	//    And='&' | Or='|' ;
	public LogicOpsElements getLogicOpsAccess() {
		return eLogicOps;
	}
	
	public EnumRule getLogicOpsRule() {
		return getLogicOpsAccess().getRule();
	}
	
	//enum ArithmOps returns ArithmOps:
	//    equal='=' | greater='>' | greaterEqual='>=' | lower='<' | lowerEqual='<='
	//;
	public ArithmOpsElements getArithmOpsAccess() {
		return eArithmOps;
	}
	
	public EnumRule getArithmOpsRule() {
		return getArithmOpsAccess().getRule();
	}
	
	//AttributeValue returns AttributeValue:
	//    class=EString '.' attribute=EString
	//;
	public AttributeValueElements getAttributeValueAccess() {
		return pAttributeValue;
	}
	
	public ParserRule getAttributeValueRule() {
		return getAttributeValueAccess().getRule();
	}
	
	//ConstantValue returns ConstantValue:
	//    value=Constant
	//;
	public ConstantValueElements getConstantValueAccess() {
		return pConstantValue;
	}
	
	public ParserRule getConstantValueRule() {
		return getConstantValueAccess().getRule();
	}
	
	//Constant returns ecore::EString:
	//    EInt | EString
	//;
	public ConstantElements getConstantAccess() {
		return pConstant;
	}
	
	public ParserRule getConstantRule() {
		return getConstantAccess().getRule();
	}
	
	//AllInstances returns AllInstances:
	//    "Number" type=EString
	//;
	public AllInstancesElements getAllInstancesAccess() {
		return pAllInstances;
	}
	
	public ParserRule getAllInstancesRule() {
		return getAllInstancesAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
