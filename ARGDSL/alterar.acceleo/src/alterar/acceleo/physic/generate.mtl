[comment encoding = UTF-8 /]
[module generate('http://ardsl/1.0')]
[import alterar::acceleo::physic::generateBit /]

[template public generateElement(aPhysic : Physic, name: String)]
[file ('physic.json', false, 'UTF-8')]
{
	"name": "[name /]",
	"classes": [ '[' /][for (class : PhysicClass | aPhysic.classes) separator(',')]
	
	{
		"name": "[class.ontoClass.name /]",
		"physicBody":{
			"bodyType": "[class.physicBody.bodyType /]",
			"mass": [class.physicBody.mass /],
			"charge": [class.physicBody.charge /],
			"friction": [class.physicBody.friction /],
			"rollingFriction": [class.physicBody.rollingFriction /],
			"damping": [class.physicBody.damping /],
			"angularDamping": [class.physicBody.angularDamping /],
			"restitution": [class.physicBody.restitution /]
		},
		"bitMasks":{
			"category": [getId(aPhysic.classes.oclAsSet(), class.ontoClass.name)/],
			"collision": [if(class.bitMasks.oclIsUndefined() = false)][getCollisionContact(aPhysic.classes.oclAsSet(), class.bitMasks.collision.oclAsSet(), class.ontoClass.name)/][/if][if(class.bitMasks.oclIsUndefined() = true)][getReflexCollision(class.ontoClass.name)/][/if],
			"contactTest": [if(class.bitMasks.oclIsUndefined() = false)][getCollisionContact(aPhysic.classes.oclAsSet(), class.bitMasks.contact.oclAsSet(), class.ontoClass.name)/][/if][if(class.bitMasks.oclIsUndefined() = true)][getReflexCollision(class.ontoClass.name)/][/if]
		},
		"forces":[ '[' /][for (force : Force | class.forces) separator(',')]
		
		{
			"name":"[force.name /]",
			"message":"",
			"gesture":"[force.gesture /]",
			"xVector":[force.xVector /],
			"yVector":[force.yVector /],
			"zVector":[force.zVector /]
		}[/for][ ']' /]
	}[/for][ ']' /]
}
[/file]
[/template]
